{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>rsconnect</code>","text":"<p>This package provides a (command-line interface) CLI for interacting with and deploying to Posit Connect. Many types of content supported by Posit Connect may be deployed by this package, including WSGI-style APIs, Dash, Streamlit, Gradio, and Bokeh applications.</p> <p>Content types not directly supported by the CLI may also be deployed if they include a prepared <code>manifest.json</code> file. See \"Deploying R or Other Content\" for details.</p>"},{"location":"#installation","title":"Installation","text":"<p>To install <code>rsconnect-python</code> from PYPI, you may use any python package manager such as pip:</p> <pre><code>pip install rsconnect-python\n</code></pre> <p>You may also build and install a wheel directly from a repository clone:</p> <pre><code>pip install git+https://github.com/posit-dev/rsconnect-python.git\n</code></pre>"},{"location":"#using-the-rsconnect-cli","title":"Using the rsconnect CLI","text":"<p>Here's an example command that deploys a Jupyter notebook to Posit Connect.</p> <pre><code>rsconnect deploy notebook \\\n    --server https://connect.example.org \\\n    --api-key my-api-key \\\n    my-notebook.ipynb\n</code></pre> <p>Note The examples here use long command line options, but there are short options (<code>-s</code>, <code>-k</code>, etc.) available also. Run <code>rsconnect deploy notebook --help</code> for details.</p>"},{"location":"#setting-up-rsconnect-cli-auto-completion","title":"Setting up <code>rsconnect</code> CLI auto-completion","text":"<p>If you would like to use your shell's tab completion support with the <code>rsconnect</code> command, use the command below for the shell you are using.</p>"},{"location":"#bash","title":"<code>bash</code>","text":"<p>If you are using the <code>bash</code> shell, use this to enable tab completion.</p> <pre><code>#~/.bashrc\neval \"$(_RSCONNECT_COMPLETE=source rsconnect)\"\n</code></pre>"},{"location":"#zsh","title":"<code>zsh</code>","text":"<p>If you are using the <code>zsh</code> shell, use this to enable tab completion.</p> <pre><code>#~/.zshrc\neval \"$(_RSCONNECT_COMPLETE=source_zsh rsconnect)\"\n</code></pre> <p>If you get <code>command not found: compdef</code>, you need to add the following lines to your <code>.zshrc</code> before the completion setup:</p> <pre><code>#~/.zshrc\nautoload -Uz compinit\ncompinit\n</code></pre>"},{"location":"#managing-server-information","title":"Managing Server Information","text":"<p>The information used by the <code>rsconnect</code> command to communicate with a Posit Connect server can be tedious to repeat on every command. To help, the CLI supports the idea of saving this information, making it usable by a simple nickname.</p> <p>Warning One item of information saved is the API key used to authenticate with Posit Connect. Although the file where this information is saved is marked as accessible by the owner only, it's important to remember that the key is present in the file as plain text so care must be taken to prevent any unauthorized access to the server information file.</p>"},{"location":"#remembering-server-information","title":"Remembering Server Information","text":"<p>Use the <code>add</code> command to store information about a Posit Connect server:</p> <pre><code>rsconnect add \\\n    --api-key my-api-key \\\n    --server https://connect.example.org \\\n    --name myserver\n</code></pre> <p>Note The <code>rsconnect</code> CLI will verify that the serve URL and API key are valid. If either is found not to be, no information will be saved.</p> <p>If any of the access information for the server changes, simply rerun the <code>add</code> command with the new information and it will replace the original information.</p> <p>Once the server's information is saved, you can refer to it by its nickname:</p> <pre><code>rsconnect deploy notebook --name myserver my-notebook.ipynb\n</code></pre> <p>If there is information for only one server saved, this will work too:</p> <pre><code>rsconnect deploy notebook my-notebook.ipynb\n</code></pre>"},{"location":"#listing-server-information","title":"Listing Server Information","text":"<p>You can see the list of saved server information with:</p> <pre><code>rsconnect list\n</code></pre>"},{"location":"#removing-server-information","title":"Removing Server Information","text":"<p>You can remove information about a server with:</p> <pre><code>rsconnect remove --name myserver\n</code></pre> <p>Removing may be done by its nickname (<code>--name</code>) or URL (<code>--server</code>).</p>"},{"location":"#verifying-server-information","title":"Verifying Server Information","text":"<p>You can verify that a URL refers to a running instance of Posit Connect by using the <code>details</code> command:</p> <pre><code>rsconnect details --server https://connect.example.org\n</code></pre> <p>In this form, <code>rsconnect</code> will only tell you whether the URL given does, in fact, refer to a running Posit Connect instance. If you include a valid API key:</p> <pre><code>rsconnect details --server https://connect.example.org --api-key my-api-key\n</code></pre> <p>the tool will provide the version of Posit Connect (if the server is configured to divulge that information) and environmental information including versions of Python that are installed on the server.</p> <p>You can also use nicknames with the <code>details</code> command if you want to verify that the stored information is still valid.</p>"},{"location":"#network-options","title":"Network Options","text":"<p>When specifying information that <code>rsconnect</code> needs to be able to interact with Posit Connect, you can tailor how transport layer security is performed.</p>"},{"location":"#tlsssl-certificates","title":"TLS/SSL Certificates","text":"<p>Posit Connect servers can be configured to use TLS/SSL. If your server's certificate is trusted by your Jupyter Notebook server, API client or user's browser, then you don't need to do anything special. You can test this out with the <code>details</code> command:</p> <pre><code>rsconnect details \\\n    --api-key my-api-key \\\n    --server https://connect.example.org:3939\n</code></pre> <p>If this fails with a TLS Certificate Validation error, then you have two options.</p> <ul> <li> <p>Provide the Root CA certificate that is at the root of the signing chain for your   Posit Connect server. This will enable <code>rsconnect</code> to securely validate the   server's TLS certificate.</p> <pre><code>rsconnect details \\\n    --api-key my-api-key \\\n    --server https://connect.example.org \\\n    --cacert /path/to/certificate.pem\n</code></pre> </li> <li> <p>Posit Connect is in \"insecure mode\". This disables TLS certificate verification,   which results in a less secure connection.</p> <pre><code>rsconnect add \\\n    --api-key my-api-key \\\n    --server https://connect.example.org \\\n    --insecure\n</code></pre> </li> </ul> <p>Once you work out the combination of options that allow you to successfully work with an instance of Posit Connect, you'll probably want to use the <code>add</code> command to have <code>rsconnect</code> remember those options and allow you to just use a nickname.</p>"},{"location":"CHANGELOG/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"CHANGELOG/#unreleased-","title":"Unreleased - ??","text":""},{"location":"CHANGELOG/#1271-2025-08-12","title":"[1.27.1] - 2025-08-12","text":""},{"location":"CHANGELOG/#fixed","title":"Fixed","text":"<ul> <li>Python Shiny apps can be deployed when Connect server version is hidden. (#695)</li> </ul>"},{"location":"CHANGELOG/#1270-2025-07-10","title":"[1.27.0] - 2025-07-10","text":""},{"location":"CHANGELOG/#added","title":"Added","text":"<ul> <li>Added support for the <code>--draft</code> option when deploying content,   this allows to deploy a new bundle for the content without exposing   it as a the activated one.</li> <li>Improved support for Posit Connect deployments   hosted in Snowpark Container Services.</li> <li>Relicensed package from GPL to MIT.</li> </ul>"},{"location":"CHANGELOG/#fixed_1","title":"Fixed","text":"<ul> <li>Command-line options like <code>--api-key</code> and associated environment variables   like <code>CONNECT_API_KEY</code> take precedence over values in a stored deployment   target. (#684)</li> </ul>"},{"location":"CHANGELOG/#1260-2025-05-28","title":"[1.26.0] - 2025-05-28","text":""},{"location":"CHANGELOG/#added_1","title":"Added","text":"<ul> <li>Added support for interaction with Posit Connect deployments   hosted in Snowpark Container Services.</li> <li><code>rsconnect</code> now detects Python interpreter version requirements from   <code>.python-version</code>, <code>pyproject.toml</code> and <code>setup.cfg</code></li> <li><code>--python</code> and <code>--override-python-version</code> options are now deprecated   in favor of using <code>.python-version</code> requirement file.</li> </ul>"},{"location":"CHANGELOG/#1252-2025-02-26","title":"[1.25.2] - 2025-02-26","text":""},{"location":"CHANGELOG/#fixed_2","title":"Fixed","text":"<ul> <li>Display system error message when <code>rsconnect.environment</code> inspection fails</li> </ul>"},{"location":"CHANGELOG/#1251-2024-12-20","title":"[1.25.1] - 2024-12-20","text":""},{"location":"CHANGELOG/#added_2","title":"Added","text":"<ul> <li>Added validation for required flags for the <code>rsconnect system caches delete</code> command.</li> <li>Added <code>--force</code> flag to <code>rsconnect content build run</code> command. This allows users   to force builds when a build is already marked as running. (#630)</li> </ul>"},{"location":"CHANGELOG/#1250-2024-12-18","title":"[1.25.0] - 2024-12-18","text":""},{"location":"CHANGELOG/#added_3","title":"Added","text":"<ul> <li>You can now deploy Gradio applications. This requires Posit Connect release 2024.12.0   or later. Use <code>rsconnect deploy gradio</code> to deploy, or <code>rsconnect write-manifest gradio</code>   to create a manifest file.</li> </ul>"},{"location":"CHANGELOG/#changed","title":"Changed","text":"<ul> <li> <p>The <code>rsconnect content build run --poll-wait</code> argument specifies an integral   number of seconds. It previously allowed fractional seconds. (#608)</p> </li> <li> <p>Uses the public Connect server API endpoint <code>/v1/tasks/{id}</code> to poll task   progress. (#608)</p> </li> </ul>"},{"location":"CHANGELOG/#removed","title":"Removed","text":"<ul> <li>Uncalled <code>RSConnectClient.app_publish()</code> function, which referenced an   obsolete workflow.</li> </ul>"},{"location":"CHANGELOG/#1240-2024-05-28","title":"[1.24.0] - 2024-05-28","text":""},{"location":"CHANGELOG/#added_4","title":"Added","text":"<ul> <li>Added support for creating manifests for TensorFlow models.</li> <li>Added support for deploying TensorFlow models.</li> </ul>"},{"location":"CHANGELOG/#1230-2024-04-04","title":"[1.23.0] - 2024-04-04","text":""},{"location":"CHANGELOG/#added_5","title":"Added","text":"<ul> <li>Added support for creating manifests for Shiny Express apps.</li> <li>Added support for deploying interactive Quarto dashboards that use Shiny Express syntax.</li> </ul>"},{"location":"CHANGELOG/#changed_1","title":"Changed","text":"<ul> <li>When deploying Shiny for Python applications on servers using a version of   Connect prior to 2024.01.0, there is an incompatibility with   <code>starlette&gt;=0.35.0</code>. When deploying to these servers, the starlette version   is now automatically set to <code>starlette&lt;0.35.0</code>.</li> </ul>"},{"location":"CHANGELOG/#fixed_3","title":"Fixed","text":"<ul> <li> <p>Quarto content is marked as a \"site\" only when there are multiple input   files. (#552)</p> </li> <li> <p>Quarto content automatically ignores <code>name.html</code> and <code>name_files</code> when   <code>name.md</code>, <code>name.ipynb</code>, <code>name.Rmd</code>, or <code>name.qmd</code> is an input. (#553)</p> </li> <li> <p>Patterns provided to <code>--exclude</code> allow NT-style paths on Windows. (#320)</p> </li> </ul>"},{"location":"CHANGELOG/#removed_1","title":"Removed","text":"<ul> <li>Python 3.7 support.</li> </ul>"},{"location":"CHANGELOG/#1220-2024-01-23","title":"[1.22.0] - 2024-01-23","text":""},{"location":"CHANGELOG/#added_6","title":"Added","text":"<ul> <li>Added support for deploying Shiny express apps.</li> <li>Added support for deploying Shiny Express applications.</li> <li>Added a <code>--retry</code> flag to the <code>rsconnect content build run</code> command to re-run   builds for all content in the NEEDS_BUILD, ABORTED, ERROR, or RUNNING state.</li> </ul>"},{"location":"CHANGELOG/#changed_2","title":"Changed","text":"<ul> <li>Improved the error and warning outputs when options conflict by providing the source   from which the values have been determined. This allows for faster resolution of issues   when combinations of stored credentials, environment variables and command line options   are used.</li> <li>Updated verbose mode to output the source of all options being used when processing the   CLI command.</li> </ul>"},{"location":"CHANGELOG/#fixed_4","title":"Fixed","text":"<ul> <li> <p>Interrupting a long-running <code>rsconnect content build run</code> command with <code>^C</code>   will now update the local state file before attempting graceful cleanup. This   should help prevent users from getting stuck a \"build already running\" state.   See #467 for details.</p> </li> <li> <p>Addressed an error which occurred when attempting to create manifests for   Quarto documents. (#534)</p> </li> </ul>"},{"location":"CHANGELOG/#1210-2023-10-26","title":"[1.21.0] - 2023-10-26","text":""},{"location":"CHANGELOG/#fixed_5","title":"Fixed","text":"<ul> <li>The <code>https_proxy</code> environment variable is recognized as a synonym for   <code>HTTPS_PROXY</code>.</li> <li>When adding a new server, the initial request now includes an   authorization header containing the API key. This is needed   for Connect installations behind a proxy that only passes   authenticated requests.</li> <li>Common environment directories (<code>env, venv, .env, .venv</code>) are no longer   excluded by name. Environments are detected by the presence of a python   executable in <code>bin</code> or <code>Scripts</code> and excluded.</li> <li>Lines output from <code>pip freeze</code> which start with [notice] are filtered out from the generated <code>requirements.txt</code>.</li> </ul>"},{"location":"CHANGELOG/#added_7","title":"Added","text":"<ul> <li>Added support for the <code>no_proxy</code> or <code>NO_PROXY</code> environment variables to specify   hosts that should not be accessed via proxy server. It's a comma-separated list   of host or domain suffixes. For example, specifying <code>example.com</code> will   bypass the proxy for example.com, host.example.com, etc.</li> <li>If an entrypoint is not specified with <code>--entrypoint</code>, rsconnect-python will try   harder than before to choose an entrypoint file. In addition to the previously   recognized filename patterns, the file patterns <code>app-*.py</code>, <code>app_*.py</code>, <code>*-app.py</code>,   and <code>*_app.py</code> are now considered. However, if the directory contains more than   one file matching these new patterns, you must provide rsconnect-python with an   explicit <code>--entrypoint</code> argument.</li> <li>Added a new verbose logging level. Specifying <code>-v</code> on the command line uses this   new level. Currently this will cause filenames to be logged as they are added to   a bundle. To enable maximum verbosity (debug level), use <code>-vv</code>.</li> <li>Added a verification step to the deployment process that accesses the deployed content.   This is a <code>GET</code> request to the content without parameters. The request is   considered successful if there isn't a 5xx code returned (errors like   400 Bad Request or 405 Method Not Allowed because not all apps support <code>GET /</code>).   For cases where this is not desired, use the <code>--no-verify</code> flag on the command line.</li> <li>Added the <code>deploy flask</code> command.</li> <li>Added the <code>write-manifest flask</code> command.</li> </ul>"},{"location":"CHANGELOG/#changed_3","title":"Changed","text":"<ul> <li>Removing experimental support for Conda. Connect does not support restoring Conda environments.</li> </ul>"},{"location":"CHANGELOG/#1200-2023-09-11","title":"[1.20.0] - 2023-09-11","text":""},{"location":"CHANGELOG/#fixed_6","title":"Fixed","text":"<ul> <li>Python virtualenvs are now detected in Windows environments, and are automatically   excluded from the uploaded bundle.</li> <li>Error deploying to shinyapps.io when <code>--app-id</code> is provided #464.</li> </ul>"},{"location":"CHANGELOG/#added_8","title":"Added","text":"<ul> <li>Add <code>--disable-env-management</code>, <code>--disable-env-management-py</code> and <code>--disable-env-management-r</code> flags for all content types   that support environment restores. These flags indicate to Connect that the user is responsible for Python/R package   installation, and Connect should not install packages during the build. The Python/R packages must still be available in the runtime   environment in order to run the content. This is especially useful if off-host execution is enabled when the execution environment   (specified by <code>--image</code>) already contains the required packages. Requires Posit Connect <code>&gt;=2023.07.0</code>.</li> </ul>"},{"location":"CHANGELOG/#1191-2023-08-01","title":"[1.19.1] - 2023-08-01","text":""},{"location":"CHANGELOG/#added_9","title":"Added","text":"<ul> <li>Failed deploys to shinyapps.io will now output build logs. Posit Cloud application deploys will also output build logs once supported server-side.</li> <li>Redeploy to Posit Cloud from a project now correctly associates the content with that project.</li> </ul>"},{"location":"CHANGELOG/#1190-2023-07-12","title":"[1.19.0] - 2023-07-12","text":""},{"location":"CHANGELOG/#added_10","title":"Added","text":"<ul> <li>The <code>CONNECT_TASK_TIMEOUT</code> environment variable, which configures the timeout for task based operations. This value translates into seconds (e.g., <code>CONNECT_TASK_TIMEOUT=60</code> is equivalent to 60 seconds.) By default, this value is set to 86,400 seconds (e.g., 24 hours).</li> <li>Deploys for Posit Cloud now support Quarto source files or projects with <code>markdown</code> or <code>jupyter</code> engines.</li> </ul>"},{"location":"CHANGELOG/#1180-2023-06-27","title":"[1.18.0] - 2023-06-27","text":""},{"location":"CHANGELOG/#added_11","title":"Added","text":"<ul> <li>Deploys for Posit Cloud and shinyapps.io now accept the <code>--visibility</code> flag.</li> </ul>"},{"location":"CHANGELOG/#changed_4","title":"Changed","text":"<ul> <li>Removes redundant client-side compatibility checks in favor of server-side compatibility checks when deploying Python content. Note that the error handling may differ between versions of Connect. See Connect release notes for additional details regarding compatibility.</li> </ul>"},{"location":"CHANGELOG/#1171-2023-05-25","title":"[1.17.1] - 2023-05-25","text":""},{"location":"CHANGELOG/#fixed_7","title":"Fixed","text":"<ul> <li>Shiny app deployment fails when static content is present in the app #373.</li> </ul>"},{"location":"CHANGELOG/#1170-2023-05-12","title":"[1.17.0] - 2023-05-12","text":""},{"location":"CHANGELOG/#added_12","title":"Added","text":"<ul> <li> <p><code>deploy html</code> and <code>deploy manifest</code> now support deployment to Posit Cloud.</p> </li> <li> <p>Added <code>system caches list</code> and <code>system caches delete</code> commands which allow administrators to enumerate and delete R and Python runtime caches from Connect servers #384. Read more about the feature in our docs.</p> </li> </ul>"},{"location":"CHANGELOG/#changed_5","title":"Changed","text":"<ul> <li>Cloud deployments accept the content id instead of application id in the --app-id field.</li> <li>The <code>app_id</code> field in application store files also stores the content id instead of the application id.</li> <li>Application store files include a <code>version</code> field, set to 1 for this release.</li> </ul>"},{"location":"CHANGELOG/#fixed_8","title":"Fixed","text":"<ul> <li>cacert read error when adding/updating a server #403.</li> <li>getdefaultlocale no longer work with newer versions of Python #397 #399.</li> <li>extra files not being included in write-manifest #416.</li> </ul>"},{"location":"CHANGELOG/#1160-2023-03-27","title":"[1.16.0] - 2023-03-27","text":""},{"location":"CHANGELOG/#added_13","title":"Added","text":"<ul> <li>The <code>CONNECT_REQUEST_TIMEOUT</code> environment variable, which configures the request timeout for all blocking HTTP and HTTPS operations. This value translates into seconds (e.g., <code>CONNECT_REQUEST_TIMEOUT=60</code> is equivalent to 60 seconds.) By default, this value is 300.</li> </ul>"},{"location":"CHANGELOG/#fixed_9","title":"Fixed","text":"<ul> <li> <p>Extra files were not being included in deploy Voila.</p> </li> <li> <p>Error message to indicate the Python also has to be configured in Connect.</p> </li> </ul>"},{"location":"CHANGELOG/#1150-2023-03-15","title":"[1.15.0] - 2023-03-15","text":""},{"location":"CHANGELOG/#added_14","title":"Added","text":"<ul> <li>Added <code>deploy voila</code> command to deploy Jupyter Voila notebooks. See the user documentation     for more information.</li> </ul>"},{"location":"CHANGELOG/#changed_6","title":"Changed","text":"<ul> <li><code>deploy html</code> was refactored. Its behavior is described below.</li> </ul>"},{"location":"CHANGELOG/#deploying-html","title":"Deploying HTML","text":"<p>Specifying a directory in the path will result in that entire directory*, subdirectories, and sub contents included in the deploy bundle. The entire directory is included whether or not an entrypoint was supplied</p> <p>e.g. using the following directory, <pre><code>\u251c\u2500 my_project/\n\u2502 \u251c\u2500 index.html\n\u2502 \u251c\u2500 second.html\n</code></pre> and the following command: <pre><code>rsconnect deploy html -n local my_project\n</code></pre> or this command: <pre><code>rsconnect deploy html -n local my_project -e my_project/index.html\n</code></pre> we will have a bundle which includes both <code>index.html</code> and <code>second.html</code></p> <ul> <li>specifying a file in the path will result in that file* - not the entire directory - included in the deploy bundle</li> </ul> <p>e.g. using the following directory, <pre><code>\u251c\u2500 my_project/\n\u2502 \u251c\u2500 index.html\n\u2502 \u251c\u2500 second.html\n</code></pre> and the following command: <pre><code>rsconnect deploy html -n local my_project/second.html\n</code></pre> we will have a bundle which includes <code>second.html</code></p> <ul> <li> <p>a note regarding entrypiont</p> <ul> <li>providing an entrypoint is optional if there's an <code>index.html</code> inside the project directory, or if there's a single html file in the project directory.</li> <li>if there are multiple html files in the project directory and it contains no <code>index.html</code>, we will get an exception when deploying that directory unless an entrypoint is specified.</li> </ul> </li> <li> <p>if we want to specify an entrypint, and we are executing the deploy command outside a project folder, we must specify the full path of the entrypoint:</p> </li> </ul> <pre><code>rsconnect deploy html -n local my_project -e my_project/second.html\n</code></pre> <ul> <li>if we want to specify an entrypint,  and we are executing the deploy command inside the project folder, we can abbreviate the entrypoint, like so: <pre><code>cd my_project\nrsconnect deploy html -n local ./ -e second.html\n</code></pre></li> </ul> <p>*Plus the manifest &amp; other necessary files needed for the bundle to work on Connect.</p>"},{"location":"CHANGELOG/#1141-2023-02-09","title":"[1.14.1] - 2023-02-09","text":""},{"location":"CHANGELOG/#fixed_10","title":"Fixed","text":"<ul> <li>Extra files were not being included in certain deploy and write-manifest commands.</li> </ul>"},{"location":"CHANGELOG/#added_15","title":"Added","text":"<ul> <li>The <code>--cacert</code> option now supports certificate files encoded in the Distinguished Encoding Rules (DER) binary format. Certificate files with DER encoding must end in a <code>.cer</code> or <code>.der</code> suffix.</li> <li>The <code>--python</code> option now provides additional user guidance when an invalid path is provided.</li> </ul>"},{"location":"CHANGELOG/#changed_7","title":"Changed","text":"<ul> <li>The <code>--cacert</code> option now requires that Privacy Enhanced Mail (PEM) formatted certificate files end in a <code>.ca-bundle</code>, <code>.crt</code>, <code>.key</code>, or <code>.pem</code> suffix.</li> </ul>"},{"location":"CHANGELOG/#1140-2023-01-19","title":"[1.14.0] - 2023-01-19","text":""},{"location":"CHANGELOG/#changed_8","title":"Changed","text":"<ul> <li>You can now redeploy to a content with an \"unknown\" app mode. A content item's app mode is \"unknown\" if it was created, but never deployed to, or its deployment failed before an app mode could be determined.</li> </ul>"},{"location":"CHANGELOG/#removed_2","title":"Removed","text":"<ul> <li> <p>Python 3.5 &amp; 3.6 support.</p> </li> <li> <p><code>rsconnect-python</code> no longer considers the <code>RETICULATE_PYTHON</code> environment variable.   In environments where <code>RETICULATE_PYTHON</code> is set outside a project context (e.g. by a Posit Workbench administrator),   attempting to deploy content or write manifests in projects using virtual environments required explicitly setting <code>--python /path/to/virtualenv/python</code>.   Removing <code>RETICULATE_PYTHON</code> detection should simplify the use of the CLI in this case.</p> </li> </ul>"},{"location":"CHANGELOG/#1130-2022-12-02","title":"[1.13.0] - 2022-12-02","text":""},{"location":"CHANGELOG/#added_16","title":"Added","text":"<ul> <li>When running rsconnect bootstrap, you can now specify the jwt secret using the CONNECT_BOOTSTRAP_SECRETKEY environment variable.</li> </ul>"},{"location":"CHANGELOG/#changed_9","title":"Changed","text":"<ul> <li> <p>Update pip_freeze to use <code>pip freeze</code> since Connect filters for valid package paths in the backend and it no longer depends on the undocumented behavior of <code>pip list --format=freeze</code>. This reverts the change made in 1.5.2.</p> </li> <li> <p>Renamed the deploy_html <code>excludes</code> flag to <code>exclude</code> for consistency with other deploy commands.</p> </li> </ul>"},{"location":"CHANGELOG/#1121-2022-11-07","title":"[1.12.1] - 2022-11-07","text":""},{"location":"CHANGELOG/#changed_10","title":"Changed","text":"<ul> <li>Updated actions.py to reuse code in main, minus the CLI parts. As a result deploy_jupyter_notebook and deploy_by_manifest had their return signatures changed. They now return None.</li> </ul>"},{"location":"CHANGELOG/#1120-2022-10-26","title":"[1.12.0] - 2022-10-26","text":""},{"location":"CHANGELOG/#added_17","title":"Added","text":"<ul> <li>You can now use the new rsconnect bootstrap command to programmatically provision an initial administrator api key on a fresh Connect instance. This requires RStudio Connect release 2022.10.0 or later and Python version &gt;= 3.6.</li> </ul>"},{"location":"CHANGELOG/#1110-2022-10-12","title":"[1.11.0] - 2022-10-12","text":""},{"location":"CHANGELOG/#added_18","title":"Added","text":"<ul> <li>Add support for deployment on RStudio Cloud</li> </ul>"},{"location":"CHANGELOG/#changed_11","title":"Changed","text":"<ul> <li>rsconnect-python will now issue warnings if it detects environmental variables that overlap with stored credentials</li> </ul>"},{"location":"CHANGELOG/#1100-2022-07-27","title":"[1.10.0] - 2022-07-27","text":""},{"location":"CHANGELOG/#added_19","title":"Added","text":"<ul> <li>You can now deploy Shiny for Python applications with <code>deploy shiny</code></li> <li>In addition to deploying to Connect, you can now deploy to shinyapps.io with <code>deploy shiny</code> or <code>deploy manifest</code></li> <li>The <code>add</code> option now supports shinyapps.io credentials.</li> </ul>"},{"location":"CHANGELOG/#190-2022-07-06","title":"[1.9.0] - 2022-07-06","text":""},{"location":"CHANGELOG/#added_20","title":"Added","text":"<ul> <li>You can now deploy Quarto documents in addition to Quarto projects. This   requires RStudio Connect release 2021.08.0 or later. Use <code>rsconnect deploy   quarto</code> to deploy, or <code>rsconnect write-manifest quarto</code> to create a manifest   file.</li> </ul>"},{"location":"CHANGELOG/#changed_12","title":"Changed","text":"<ul> <li>As a prelude to setting and documenting rsconnect-python APIs, various functions in <code>actions</code> have been moved to <code>bundle</code>, or replaced with RSConnectExecutor. The moved functions now include a deprecation warning, and will be fully deprecated in a future release.</li> </ul>"},{"location":"CHANGELOG/#181-2022-05-31","title":"[1.8.1] - 2022-05-31","text":""},{"location":"CHANGELOG/#changed_13","title":"Changed","text":"<p>Corrected changelog heading.</p>"},{"location":"CHANGELOG/#180-2022-05-31","title":"[1.8.0] - 2022-05-31","text":""},{"location":"CHANGELOG/#added_21","title":"Added","text":"<ul> <li> <p>You can now set environment variables for the deployed content with the <code>-E</code> option.   These will be passed to RStudio Connect during the deployment process,   so they are available in your code whenever it runs within RStudio Connect.   Requires RStudio Connect version 1.8.6 or later.</p> </li> <li> <p>You can now deploy Quarto projects. This requires RStudio Connect release   2021.08.0 or later. Use <code>rsconnect deploy quarto</code> to deploy, or <code>rsconnect   write-manifest quarto</code> to create a manifest file.</p> </li> <li> <p>An <code>image</code> command line option has been added to the <code>write-manifest</code> and   <code>deploy</code> commands to specify the target image to be used on the RStudio Connect   server during content execution. This is only supported for the <code>api</code>, <code>bokeh</code>, <code>dash</code>,   <code>fastapi</code>, <code>notebook</code>, <code>quarto</code> and <code>streamlit</code> sub-commands. It is only   applicable if the RStudio Connect server is configured to use off-host execution.</p> </li> <li> <p>You can now deploy static content such as html and its associated assets with   <code>rsconnect deploy html</code>.</p> </li> </ul>"},{"location":"CHANGELOG/#171-2022-02-15","title":"[1.7.1] - 2022-02-15","text":""},{"location":"CHANGELOG/#added_22","title":"Added","text":"<ul> <li>Publish supported python versions announcement.</li> </ul>"},{"location":"CHANGELOG/#170-2022-02-11","title":"[1.7.0] - 2022-02-11","text":""},{"location":"CHANGELOG/#added_23","title":"Added","text":"<ul> <li>Adds <code>rsconnect content</code> subcommands for interacting with RStudio Connect's <code>/v1/content</code>   REST API. This allows users to search, download, and (re)build content. Users should   note that the <code>rsconnect content build</code> subcommand requires RStudio Connect release 2021.11.1   or later.</li> </ul>"},{"location":"CHANGELOG/#changed_14","title":"Changed","text":"<ul> <li>Support for Python 2.7 has been removed in this release.</li> </ul>"},{"location":"CHANGELOG/#160-2021-08-30","title":"[1.6.0] - 2021-08-30","text":""},{"location":"CHANGELOG/#added_24","title":"Added","text":"<ul> <li>You can now deploy FastAPI applications. This requires RStudio Connect release 2021.08.0   or later. Use <code>rsconnect deploy fastapi</code> to deploy, or <code>rsconnect write-manifest fastapi</code>   to create a manifest file.</li> <li>In addition to FastAPI, you can also deploy Quart, Sanic, and Falcon ASGI applications.</li> </ul>"},{"location":"CHANGELOG/#changed_15","title":"Changed","text":"<ul> <li>rsconnect-python will now issue a warning during deployment if there isn't a requirements.txt   file in the deployment directory. Using a requirements file ensures consistency in the   environment that will be created by the RStudio Connect server during deployment. This helps avoid   unnecessary package installations and issues that can occur if rsconnect-python falls back   to inferring packages from the local Python environment.</li> </ul>"},{"location":"CHANGELOG/#154-2021-07-29","title":"[1.5.4] - 2021-07-29","text":""},{"location":"CHANGELOG/#added_25","title":"Added","text":"<ul> <li> <p>If an entrypoint is not specified with <code>--entrypoint</code>, rsconnect-python will attempt   to choose an entrypoint file. It looks for common names (<code>app.py</code>, <code>application.py</code>,   <code>main.py</code>, <code>api.py</code>). If there is a single python source file in the directory,   that will be used as the entrypoint.   rsconnect-python does not inspect the file contents to identify the object name, which must be   one of the default names that Connect expects (<code>app</code>, <code>application</code>, <code>create_app</code>, or <code>make_app</code>).</p> </li> <li> <p>Ability to hide code cells when rendering Jupyter notebooks.</p> </li> </ul> <p>After setting up Connect (&gt;=1.9.0) and rsconnect-python, the user can render a Jupyter notebook without its corresponding code cells by passing the ' hide-all-input' flag through the rsconnect cli:</p> <pre><code>rsconnect deploy notebook \\\n    --server https://connect.example.org:3939 \\\n    --api-key my-api-key \\\n    --hide-all-input \\\n    mynotebook.ipynb\n</code></pre> <p>To selectively hide the input of cells, the user can add a tag call 'hide_input' to the cell, then pass the ' hide-tagged-input' flag through the rsconnect cli:</p> <pre><code>rsconnect deploy notebook \\\n    --server https://connect.example.org:3939 \\\n    --api-key my-api-key \\\n    --hide-tagged-input \\\n    mynotebook.ipynb\n</code></pre>"},{"location":"CHANGELOG/#153-2021-05-06","title":"[1.5.3] - 2021-05-06","text":""},{"location":"CHANGELOG/#added_26","title":"Added","text":"<ul> <li>Support for generating md5 file upload checksums, even if Python's <code>hashlib</code>   was configured for FIPS mode. The fallback uses the <code>usedforsecurity</code> option which is   available in Python 3.9 and later.</li> </ul>"},{"location":"CHANGELOG/#152-2021-04-02","title":"[1.5.2] - 2021-04-02","text":""},{"location":"CHANGELOG/#added_27","title":"Added","text":"<ul> <li>support for HTTPS_PROXY</li> </ul>"},{"location":"CHANGELOG/#changed_16","title":"Changed","text":"<ul> <li>Environments are now introspected with <code>pip list --format=freeze</code> instead of <code>pip freeze</code>,   since the latter injects nonexistent paths into the requirements file when run in a conda environment.   This issue started occurring when pip 20.1 added support for PEP 610 metadata.</li> <li>Conda environments contain Conda-only versions of setuptools, which are now filtered out from requirements.txt for non-Conda environments.</li> </ul>"},{"location":"CHANGELOG/#151-2020-11-02","title":"[1.5.1] - 2020-11-02","text":""},{"location":"CHANGELOG/#fixed_11","title":"Fixed","text":"<ul> <li>Python 2 encoding error when using rsconnect-jupyter to publish a notebook containing binary data.</li> <li>Preserve more details when raising exceptions.</li> </ul>"},{"location":"CHANGELOG/#150-2020-07-10","title":"1.5.0 - 2020-07-10","text":""},{"location":"CHANGELOG/#added_28","title":"Added","text":"<ul> <li>support for deploying Streamlit and Bokeh applications</li> <li>improved handling of HTTP timeouts</li> <li>CI verification on macos with python3.8</li> <li>trigger rsconnect-jupyter workflow on   successful pushes to main branch</li> </ul>"},{"location":"CHANGELOG/#changed_17","title":"Changed","text":"<ul> <li>default exclusion list to include common virtual environment directory names (<code>env</code>,   <code>venv</code>, <code>.env</code>, and <code>.venv</code>)</li> <li>environment internally represented as data class instead of dict</li> <li>replace all internal \"compatibility mode\" references with \"conda mode\"</li> <li>CI moved to GitHub Actions</li> </ul>"},{"location":"CHANGELOG/#removed_3","title":"Removed","text":"<ul> <li>generation and publishing of <code>sdist</code> artifact</li> </ul>"},{"location":"CHANGELOG/#fixed_12","title":"Fixed","text":"<ul> <li>explicitly set the <code>--to-html</code> option to <code>nbconvert</code> when publishing a static notebook,   as required by the latest version of <code>nbconvert</code></li> </ul>"},{"location":"CHANGELOG/#145-2020-04-10","title":"1.4.5 - 2020-04-10","text":""},{"location":"CHANGELOG/#changed_18","title":"Changed","text":"<ul> <li>provide clearer feedback when errors happen while building bundles from a manifest</li> <li>pin required versions of the <code>click</code> and <code>six</code> libraries that we use</li> <li>help text touch up</li> </ul>"},{"location":"CHANGELOG/#fixed_13","title":"Fixed","text":"<ul> <li>output alignment under Python 2</li> </ul>"},{"location":"CHANGELOG/#144-2020-04-02","title":"1.4.4 - 2020-04-02","text":""},{"location":"CHANGELOG/#changed_19","title":"Changed","text":"<ul> <li>converted a traceback to a more appropriate message</li> <li>updated <code>CookieJar</code> class to support marshalling/un-marshalling   to/from a dictionary</li> </ul>"},{"location":"CHANGELOG/#fixed_14","title":"Fixed","text":"<ul> <li>an issue with cookie jar continuity across connections</li> </ul>"},{"location":"CHANGELOG/#143-2020-04-01","title":"1.4.3 - 2020-04-01","text":""},{"location":"CHANGELOG/#changed_20","title":"Changed","text":"<ul> <li>being more distinguishing between a server that's not running Connect and a credentials   problem</li> </ul>"},{"location":"CHANGELOG/#142-2020-03-27","title":"1.4.2 - 2020-03-27","text":""},{"location":"CHANGELOG/#added_29","title":"Added","text":"<ul> <li>more helpful feedback when a \"requested object does not exist\" error is returned by   Connect</li> </ul>"},{"location":"CHANGELOG/#changed_21","title":"Changed","text":"<ul> <li>be more distinguishing between a server that's not running Connect and a credentials   problem</li> </ul>"},{"location":"CHANGELOG/#fixed_15","title":"Fixed","text":"<ul> <li>an issue where cookie header size could grow inappropriately (#107)</li> <li>corrected the instructions to enable auto-completion</li> </ul>"},{"location":"CHANGELOG/#141-2020-03-26","title":"1.4.1 - 2020-03-26","text":""},{"location":"CHANGELOG/#fixed_16","title":"Fixed","text":"<ul> <li>sticky sessions so we will track deploys correctly when RStudio Connect is in an   HA/clustered environment</li> </ul>"},{"location":"CHANGELOG/#140-2020-03-16","title":"1.4.0 - 2020-03-16","text":""},{"location":"CHANGELOG/#added_30","title":"Added","text":"<ul> <li>functions in <code>actions</code> that provide the same functionality as the CLI</li> </ul>"},{"location":"CHANGELOG/#changed_22","title":"Changed","text":"<ul> <li>command line handling of options is more consistent across all commands</li> <li><code>test</code> command replaced with a more broadly functional <code>details</code> command</li> <li>errors handled much more consistently and are more informative</li> <li>CLI output is more clean</li> <li>overall code has been refactored and improved for clarity, testability and stability</li> <li>all CLI help has been improved for consistency, correctness and completeness</li> <li>many documentation improvements in content and appearance</li> </ul>"},{"location":"CHANGELOG/#130-2020-01-07","title":"1.3.0 - 2020-01-07","text":""},{"location":"CHANGELOG/#added_31","title":"Added","text":"<ul> <li>first release</li> </ul>"},{"location":"deploying/","title":"Deploying Content","text":""},{"location":"deploying/#notebook-deployment-options","title":"Notebook Deployment Options","text":"<p>There are a variety of options available to you when deploying a Jupyter notebook to Posit Connect.</p>"},{"location":"deploying/#including-extra-files","title":"Including Extra Files","text":"<p>You can include extra files in the deployment bundle to make them available when your notebook is run by the Posit Connect server. Just specify them on the command line after the notebook file:</p> <pre><code>rsconnect deploy notebook my-notebook.ipynb data.csv\n</code></pre>"},{"location":"deploying/#package-dependencies","title":"Package Dependencies","text":"<p>If a <code>requirements.txt</code> file exists in the same directory as the notebook file, it will be included in the bundle. It must specify the package dependencies needed to execute the notebook. Posit Connect will reconstruct the Python environment using the specified package list.</p> <p>If there is no <code>requirements.txt</code> file or the <code>--force-generate</code> option is specified, the package dependencies will be determined from the current Python environment, or from an alternative Python executable specified via the <code>--python</code> option:</p> <pre><code>rsconnect deploy notebook --python /path/to/python my-notebook.ipynb\n</code></pre> <p>You can see the packages list that will be included by running <code>pip list --format=freeze</code> yourself, ensuring that you use the same Python that you use to run your Jupyter Notebook:</p> <pre><code>/path/to/python -m pip list --format=freeze\n</code></pre>"},{"location":"deploying/#python-version","title":"Python Version","text":"<p>When deploying Python content to Posit Connect, the server will require a version of Python that matches the content requirements.</p> <p>For example, a server with only Python 3.9 installed will fail to match content that requires Python 3.8.</p> <p><code>rsconnect</code> supports detecting Python version requirements in several ways:     1. A <code>.python-version</code> file exists. In such case        <code>rsconnect</code> will use its content to determine the python version requirement.     2. A <code>pyproject.toml</code> with a <code>project.requires-python</code> field exists.        In such case the requirement specified in the field will be used        if no <code>.python-version</code> file exists.     3. A <code>setup.cfg</code> with an <code>options.python_requires</code> field exists.        In such case the requirement specified in the field will be used        if 1 or 2 were not already satisfied.     4. If no other source of version requirement was found, then        the interpreter in use is considered the one required to run the content.</p> <p>On Posit Connect <code>&gt;=2025.03.0</code> the requirement detected by <code>rsconnect</code> is always respected. Older Connect versions will instead rely only on the python version used to deploy the content to determine the requirement.</p> <p>For more information see the Posit Connect Admin Guide chapter titled Python Version Matching.</p> <p>We recommend providing a <code>pyproject.toml</code> with a <code>project.requires-python</code> field if the deployed content is an installable package and a <code>.python-version</code> file for plain directories.</p> <p>Note The packages and package versions listed in <code>requirements.txt</code> must be compatible with the Python version you request.</p>"},{"location":"deploying/#static-snapshot-deployment","title":"Static (Snapshot) Deployment","text":"<p>By default, <code>rsconnect</code> deploys the original notebook with all its source code. This enables the Posit Connect server to re-run the notebook upon request or on a schedule.</p> <p>If you just want to publish an HTML snapshot of the notebook, you can use the <code>--static</code> option. This will cause <code>rsconnect</code> to execute your notebook locally to produce the HTML file, then publish the HTML file to the Posit Connect server:</p> <pre><code>rsconnect deploy notebook --static my-notebook.ipynb\n</code></pre>"},{"location":"deploying/#creating-a-manifest-for-future-deployment","title":"Creating a Manifest for Future Deployment","text":"<p>You can create a <code>manifest.json</code> file for a Jupyter Notebook, then use that manifest in a later deployment. Use the <code>write-manifest</code> command to do this.</p> <p>The <code>write-manifest</code> command will also create a <code>requirements.txt</code> file, if it does not already exist or the <code>--force-generate</code> option is specified. It will contain the package dependencies from the current Python environment, or from an alternative Python executable specified in the <code>--python</code> option.</p> <p>Here is an example of the <code>write-manifest</code> command:</p> <pre><code>rsconnect write-manifest notebook my-notebook.ipynb\n</code></pre> <p>Note Manifests for static (pre-rendered) notebooks cannot be created.</p>"},{"location":"deploying/#apiapplication-deployment-options","title":"API/Application Deployment Options","text":"<p>You can deploy a variety of APIs and applications using sub-commands of the <code>rsconnect deploy</code> command.</p> <ul> <li><code>api</code>: WSGI-compliant APIs (e.g., <code>bottle</code>, <code>falcon</code>, <code>flask</code>, <code>flask-restx</code>, <code>flasgger</code>, <code>pycnic</code>).</li> <li><code>flask</code>: Flask APIs (Note: <code>flask</code> is an alias of <code>api</code>.).</li> <li><code>fastapi</code>: ASGI-compliant APIs (e.g, <code>fastapi</code>, <code>quart</code>, <code>sanic</code>, <code>starlette</code>)</li> <li><code>dash</code>: Python Dash apps</li> <li><code>streamlit</code>: Streamlit apps</li> <li><code>bokeh</code>: Bokeh server apps</li> <li><code>gradio</code>: Gradio apps</li> </ul> <p>All options below apply equally to the <code>api</code>, <code>fastapi</code>, <code>dash</code>, <code>streamlit</code>, <code>gradio</code>, and <code>bokeh</code> sub-commands.</p>"},{"location":"deploying/#including-extra-files_1","title":"Including Extra Files","text":"<p>You can include extra files in the deployment bundle to make them available when your API or application is run by the Posit Connect server. Just specify them on the command line after the API or application directory:</p> <pre><code>rsconnect deploy api flask-api/ data.csv\n</code></pre> <p>Since deploying an API or application starts at a directory level, there will be times when some files under that directory subtree should not be included in the deployment or manifest. Use the <code>--exclude</code> option to specify files or directories to exclude.</p> <pre><code>rsconnect deploy dash --exclude dash-app-venv --exclude TODO.txt dash-app/\n</code></pre> <p>You can exclude a directory by naming it:</p> <pre><code>rsconnect deploy dash --exclude dash-app-venv --exclude output/ dash-app/\n</code></pre> <p>The <code>--exclude</code> option may be repeated, and may include a glob pattern. You should always quote a glob pattern so that it will be passed to <code>rsconnect</code> as-is instead of letting the shell expand it. If a file is specifically listed as an extra file that also matches an exclusion pattern, the file will still be included in the deployment (i.e., extra files take precedence).</p> <pre><code>rsconnect deploy dash --exclude dash-app-venv --exclude \u201c*.txt\u201d dash-app/\n</code></pre> <p>The following shows an example of an extra file taking precedence:</p> <pre><code>rsconnect deploy dash --exclude \u201c*.csv\u201d dash-app/ important_data.csv\n</code></pre> <p>The \"<code>**</code>\" glob pattern will recursively match all files and directories, while \"<code>*</code>\" only matches files. The \"<code>**</code>\" pattern is useful with complicated project hierarchies where enumerating the included files is simpler than listing the exclusions.</p> <pre><code>rsconnect deploy quarto . _quarto.yml index.qmd requirements.txt --exclude \"**\"\n</code></pre> <p>Some directories are excluded by default, to prevent bundling and uploading files that are not needed or might interfere with the deployment process:</p> <pre><code>.Rproj.user\n.env\n.git\n.svn\n.venv\n__pycache__\nenv\npackrat\nrenv\nrsconnect-python\nrsconnect\nvenv\n</code></pre> <p>Any directory that appears to be a Python virtual environment (by containing <code>bin/python</code>) will also be excluded.</p>"},{"location":"deploying/#package-dependencies_1","title":"Package Dependencies","text":"<p>If a <code>requirements.txt</code> file exists in the API/application directory, it will be included in the bundle. It must specify the package dependencies needed to execute the API or application. Posit Connect will reconstruct the Python environment using the specified package list.</p> <p>If there is no <code>requirements.txt</code> file or the <code>--force-generate</code> option is specified, the package dependencies will be determined from the current Python environment, or from an alternative Python executable specified via the <code>--python</code> option:</p> <pre><code>rsconnect deploy api --python /path/to/python my-api/\n</code></pre> <p>You can see the packages list that will be included by running <code>pip list --format=freeze</code> yourself, ensuring that you use the same Python that you use to run your API or application:</p> <pre><code>/path/to/python -m pip list --format=freeze\n</code></pre>"},{"location":"deploying/#python-version_1","title":"Python Version","text":"<p>When deploying Python content to Posit Connect, the server will require matching <code>&lt;MAJOR.MINOR&gt;</code> versions of Python. For example, a server with only Python 3.9 installed will fail to match content deployed with Python 3.8. Your administrator may also enable exact Python version matching which will be stricter and require matching major, minor, and patch versions. For more information see the Posit Connect Admin Guide chapter titled Python Version Matching.</p> <p>We recommend installing a version of Python on your client that is also available in your Connect installation. If that's not possible, you can override rsconnect-python's detected Python version and request a version of Python that is installed in Connect, For example, this command:</p> <pre><code>rsconnect deploy api --override-python-version 3.11.5 my-api/\n</code></pre> <p>will deploy the content in <code>my-api</code> while requesting that Connect use Python version 3.11.5.</p> <p>Note The packages and package versions listed in <code>requirements.txt</code> must be compatible with the Python version you request.</p>"},{"location":"deploying/#creating-a-manifest-for-future-deployment_1","title":"Creating a Manifest for Future Deployment","text":"<p>You can create a <code>manifest.json</code> file for an API or application, then use that manifest in a later deployment. Use the <code>write-manifest</code> command to do this.</p> <p>The <code>write-manifest</code> command will also create a <code>requirements.txt</code> file, if it does not already exist or the <code>--force-generate</code> option is specified. It will contain the package dependencies from the current Python environment, or from an alternative Python executable specified in the <code>--python</code> option.</p> <p>Here is an example of the <code>write-manifest</code> command:</p> <pre><code>rsconnect write-manifest api my-api/\n</code></pre>"},{"location":"deploying/#deploying-r-or-other-content","title":"Deploying R or Other Content","text":"<p>You can deploy other content that has an existing Posit Connect <code>manifest.json</code> file. For example, if you download and unpack a source bundle from Posit Connect, you can deploy the resulting directory. The options are similar to notebook or API/application deployment; see <code>rsconnect deploy manifest --help</code> for details.</p> <p>Here is an example of the <code>deploy manifest</code> command:</p> <pre><code>rsconnect deploy manifest /path/to/manifest.json\n</code></pre> <p>Note In this case, the existing content is deployed as-is. Python environment inspection and notebook pre-rendering, if needed, are assumed to be done already and represented in the manifest.</p> <p>The argument to <code>deploy manifest</code> may also be a directory so long as that directory contains a <code>manifest.json</code> file.</p> <p>If you have R content but don't have a <code>manifest.json</code> file, you can use the RStudio IDE to create the manifest. See the help for the <code>rsconnect::writeManifest</code> R function:</p> <pre><code>install.packages('rsconnect')\nlibrary(rsconnect)\n?rsconnect::writeManifest\n</code></pre>"},{"location":"deploying/#options-for-all-types-of-deployments","title":"Options for All Types of Deployments","text":"<p>These options apply to any type of content deployment.</p>"},{"location":"deploying/#title","title":"Title","text":"<p>The title of the deployed content is, by default, derived from the filename. For example, if you deploy <code>my-notebook.ipynb</code>, the title will be <code>my-notebook</code>. To change this, use the <code>--title</code> option:</p> <pre><code>rsconnect deploy notebook --title \"My Notebook\" my-notebook.ipynb\n</code></pre> <p>When using <code>rsconnect deploy api</code>, <code>rsconnect deploy fastapi</code>, <code>rsconnect deploy dash</code>, <code>rsconnect deploy streamlit</code>, <code>rsconnect deploy bokeh</code>, or <code>rsconnect deploy gradio</code>, the title is derived from the directory containing the API or application.</p> <p>When using <code>rsconnect deploy manifest</code>, the title is derived from the primary filename referenced in the manifest.</p>"},{"location":"deploying/#verification-after-deployment","title":"Verification After Deployment","text":"<p>After deploying your content, rsconnect accesses the deployed content to verify that the deployment is live. This is done with a <code>GET</code> request to the content, without parameters. The request is considered successful if there isn't a 5xx code returned. Errors like 400 Bad Request or 405 Method Not Allowed because not all apps support <code>GET /</code>. For cases where this is not desired, use the <code>--no-verify</code> flag on the command line.</p>"},{"location":"deploying/#environment-variables","title":"Environment variables","text":"<p>You can set environment variables during deployment. Their names and values will be passed to Posit Connect during deployment so you can use them in your code. Note that if you are using <code>rsconnect</code> to deploy to shinyapps.io, environment variable management is not supported on that platform.</p> <p>For example, if <code>notebook.ipynb</code> contains</p> <pre><code>print(os.environ[\"MYVAR\"])\n</code></pre> <p>You can set the value of <code>MYVAR</code> that will be set when your code runs in Posit Connect using the <code>-E/--environment</code> option:</p> <pre><code>rsconnect deploy notebook --environment MYVAR='hello world' notebook.ipynb\n</code></pre> <p>To avoid exposing sensitive values on the command line, you can specify a variable without a value. In this case, it will use the value from the environment in which rsconnect-python is running:</p> <pre><code>export SECRET_KEY=12345\n\nrsconnect deploy notebook --environment SECRET_KEY notebook.ipynb\n</code></pre> <p>If you specify environment variables when updating an existing deployment, new values will be set for the variables you provided. Other variables will remain unchanged. If you don't specify any variables, all of the existing variables will remain unchanged.</p> <p>Environment variables are set on the content item before the content bundle is uploaded and deployed. If the deployment fails, the new environment variables will still take effect.</p>"},{"location":"deploying/#updating-a-deployment","title":"Updating a Deployment","text":"<p>If you deploy a file again to the same server, <code>rsconnect</code> will update the previous deployment. This means that you can keep running <code>rsconnect deploy notebook my-notebook.ipynb</code> as you develop new versions of your notebook. The same applies to other Python content types.</p>"},{"location":"deploying/#forcing-a-new-deployment","title":"Forcing a New Deployment","text":"<p>To bypass this behavior and force a new deployment, use the <code>--new</code> option:</p> <pre><code>rsconnect deploy dash --new my-app/\n</code></pre>"},{"location":"deploying/#updating-a-different-deployment","title":"Updating a Different Deployment","text":"<p>If you want to update an existing deployment but don't have the saved deployment data, you can provide the app's numeric ID or GUID on the command line:</p> <pre><code>rsconnect deploy notebook --app-id 123456 my-notebook.ipynb\n</code></pre> <p>You must be the owner of the target deployment, or a collaborator with permission to change the content. The type of content (static notebook, notebook with source code, API, or application) must match the existing deployment.</p> <p>Note There is no confirmation required to update a deployment. If you do so accidentally, use the \"Source Versions\" dialog in the Posit Connect dashboard to activate the previous version and remove the erroneous one.</p>"},{"location":"deploying/#finding-the-app-id","title":"Finding the App ID","text":"<p>The App ID associated with a piece of content you have previously deployed from the <code>rsconnect</code> command line interface can be found easily by querying the deployment information using the <code>info</code> command. For more information, see the Showing the Deployment Information section.</p> <p>If the content was deployed elsewhere or <code>info</code> does not return the correct App ID, but you can open the content on Posit Connect, find the content and open it in a browser. The URL in your browser's location bar will contain <code>#/apps/NNN</code> where <code>NNN</code> is your App ID. The GUID identifier for the app may be found on the Info tab for the content in the Posit Connect UI.</p>"},{"location":"deploying/#showing-the-deployment-information","title":"Showing the Deployment Information","text":"<p>You can see the information that the <code>rsconnect</code> command has saved for the most recent deployment with the <code>info</code> command:</p> <pre><code>rsconnect info my-notebook.ipynb\n</code></pre> <p>If you have deployed to multiple servers, the most recent deployment information for each server will be shown. This command also displays the path to the file where the deployment data is stored.</p>"},{"location":"deploying/#stored-information-files","title":"Stored Information Files","text":"<p>Stored information files are stored in a platform-specific directory:</p> Platform Location Mac <code>$HOME/Library/Application Support/rsconnect-python/</code> Linux <code>$HOME/.rsconnect-python/</code> or <code>$XDG_CONFIG_HOME/rsconnect-python/</code> Windows <code>$APPDATA/rsconnect-python</code> <p>Remembered server information is stored in the <code>servers.json</code> file in that directory.</p>"},{"location":"deploying/#deployment-data","title":"Deployment Data","text":"<p>After a deployment is completed, information about the deployment is saved to enable later redeployment. This data is stored alongside the deployed file, in an <code>rsconnect-python</code> subdirectory, if possible. If that location is not writable during deployment, then the deployment data will be stored in the global configuration directory specified above.</p>  Generated from <code>rsconnect-python None</code>"},{"location":"deploying/#hide-jupyter-notebook-input-code-cells","title":"Hide Jupyter Notebook Input Code Cells","text":"<p>You can render a Jupyter notebook without its corresponding input code cells by passing the '--hide-all-input' flag through the cli:</p> <pre><code>rsconnect deploy notebook \\\n    --server https://connect.example.org \\\n    --api-key my-api-key \\\n    --hide-all-input \\\n    my-notebook.ipynb\n</code></pre> <p>To selectively hide input cells in a Jupyter notebook, you need to do two things:</p> <ol> <li>tag cells with the 'hide_input' tag,</li> <li>then pass the ' --hide-tagged-input' flag through the cli:</li> </ol> <pre><code>rsconnect deploy notebook \\\n    --server https://connect.example.org \\\n    --api-key my-api-key \\\n    --hide-tagged-input \\\n    my-notebook.ipynb\n</code></pre> <p>By default, rsconnect-python does not install Jupyter notebook-related depenencies. To use these hide input features in rsconnect-python you need to install these extra dependencies:</p> <pre><code>notebook\nnbformat\nnbconvert&gt;=5.6.1\n</code></pre>"},{"location":"programmatic-provisioning/","title":"Programmatic Provisioning","text":"<p>Posit Connect supports the programmatic bootstrapping of an administrator API key for scripted provisioning tasks. This process is supported by the <code>rsconnect bootstrap</code> command, which uses a JSON Web Token to request an initial API key from a fresh Connect instance.</p> <pre><code>rsconnect bootstrap \\\n    --server https://connect.example.org:3939 \\\n    --jwt-keypath /path/to/secret.key\n</code></pre> <p>A full description on how to use <code>rsconnect bootstrap</code> in a provisioning workflow is provided in the Connect administrator guide's programmatic provisioning documentation.</p>"},{"location":"server-administration/","title":"Server Administration","text":"<p>Starting with the 2023.05 edition of Posit Connect, <code>rsconnect-python</code> can be used to perform certain server administration tasks, such as instance managing runtime caches. For more information on runtime caches in Posit Connect, see the Connect Admin Guide's section on runtime caches.</p> <p>Examples in this section will use <code>--name myserver</code> to stand in for your Connect server information. See Managing Server Information above for more details.</p>"},{"location":"server-administration/#runtime-caches","title":"Runtime Caches","text":""},{"location":"server-administration/#enumerate-runtime-caches","title":"Enumerate Runtime Caches","text":"<p>New in Connect 2023.05</p> <p>Use the command below to enumerate runtime caches on a Connect server. The command will output a JSON object containing a list of runtime caches . Each cache entry will contain the following information:</p> <ul> <li><code>language</code>: The language of content that uses the cache, either R or Python.</li> <li><code>version</code>: The language version of the content that uses the cache.</li> <li><code>image_name</code>: The execution environment of the cache. The string <code>Local</code>   denotes native execution. For Connect instances that use off-host execution,   the name of the image that uses the cache will be displayed.</li> </ul> <pre><code>rsconnect system caches list --name myserver\n# {\n#   \"caches\": [\n#     {\n#       \"language\": \"R\",\n#       \"version\": \"3.6.3\",\n#       \"image_name\": \"Local\"\n#     },\n#     {\n#       \"language\": \"Python\",\n#       \"version\": \"3.9.5\",\n#       \"image_name\": \"Local\"\n#     },\n#         {\n#       \"language\": \"R\",\n#       \"version\": \"3.6.3\",\n#       \"image_name\": \"rstudio/content-base:r3.6.3-py3.9.5-bionic\"\n#     },\n#     {\n#       \"language\": \"Python\",\n#       \"version\": \"3.9.5\",\n#       \"image_name\": \"rstudio/content-base:r3.6.3-py3.9.5-bionic\"\n#     }\n#   ]\n# }\n</code></pre> <p>Note The <code>image_name</code> field returned by the server will use sanitized versions of names.</p>"},{"location":"server-administration/#delete-runtime-caches","title":"Delete Runtime Caches","text":"<p>New in Connect 2023.05</p> <p>When Connect's execution environment changes, runtime caches may be invalidated. In these cases, you will need to delete the affected runtime caches using the <code>system caches delete</code> command.</p> <p>Warning After deleting a cache, the first time affected content is visited, Connect will need to reconstruct its environment. This can take a long time. To mitigate this, you can use the <code>content build</code> command to rebuild affected content ahead of time. You may want to do this just for high-priority content, or for all content.</p> <p>To delete a runtime cache, call the <code>system caches delete</code> command, specifying a Connect server, as well as the language (<code>-l, --language</code>), version (<code>-V, --version</code>), and image name (<code>-I, --image-name</code>) for the cache you wish to delete. Deleting a large cache might take a while. The command will wait for Connect to finish the task.</p> <p>Use the following parameters specify the target cache:</p> <ul> <li><code>language</code> (required) must name <code>R</code> or <code>Python</code>. It is case-insensitive.</li> <li><code>version</code> (required) must be a three-part version number, e.g. <code>3.8.12</code>.</li> <li><code>image-name</code> (optional) defaults to <code>Local</code>, which targets caches used for   natively-executed content. Off-host images can be specified using either the   literal image name or the sanitized name returned by the <code>list</code> command.</li> </ul> <p>Use the dry run flag (<code>-d, --dry-run</code>) to surface any errors ahead of deletion.</p> <pre><code>rsconnect system caches delete \\\n    --name myserver \\\n    --language Python \\\n    --version 3.9.5 \\\n    --image-name rstudio/content-base:r3.6.3-py3.9.5-bionic \\\n    --dry-run\n# Dry run finished\n\nrsconnect system caches delete \\\n    --name myserver \\\n    --language Python \\\n    --version 3.9.5 \\\n    --image-name rstudio/content-base:r3.6.3-py3.9.5-bionic\n# Deleting runtime cache...\n# Successfully deleted runtime cache\n</code></pre> <p>You should run these commands for each cache you wish to delete.</p>"},{"location":"server-administration/#content-subcommands","title":"Content subcommands","text":"<p>rsconnect-python supports multiple options for interacting with Posit Connect's <code>/v1/content</code> API. Both administrators and publishers can use the content subcommands to search, download, and rebuild content on Posit Connect without needing to access the dashboard from a browser.</p> <p>Note The <code>rsconnect content</code> CLI subcommands are intended to be easily scriptable. The default output format is <code>JSON</code> so that the results can be easily piped into other command line utilities like <code>jq</code> for further post-processing.</p> <pre><code>rsconnect content --help\n# Usage: rsconnect content [OPTIONS] COMMAND [ARGS]...\n\n#   Interact with Posit Connect's content API.\n\n# Options:\n#   --help  Show this message and exit.\n\n# Commands:\n#   build            Build content on Posit Connect.\n#   describe         Describe a content item on Posit Connect.\n#   download-bundle  Download a content item's source bundle.\n#   search           Search for content on Posit Connect.\n</code></pre>"},{"location":"server-administration/#content-search","title":"Content Search","text":"<p>The <code>rsconnect content search</code> subcommands can be used by administrators and publishers to find specific content on a given Posit Connect server. The search returns metadata for each content item that meets the search criteria.</p> <pre><code>rsconnect content search --help\n# Usage: rsconnect content search [OPTIONS]\n\n# Options:\n#   -n, --name TEXT                 The nickname of the Posit Connect server.\n#   -s, --server TEXT               The URL for the Posit Connect server.\n#   -k, --api-key TEXT              The API key to use to authenticate with\n#                                   Posit Connect.\n\n#   -i, --insecure                  Disable TLS certification/host validation.\n#   -c, --cacert FILENAME           The path to trusted TLS CA certificates.\n#   --published                     Search only published content.\n#   --unpublished                   Search only unpublished content.\n#   --content-type [unknown|shiny|rmd-static|rmd-shiny|static|api|tensorflow-saved-model|jupyter-static|python-api|python-dash|python-streamlit|python-bokeh|python-fastapi|python-gradio|quarto-shiny|quarto-static]\n#                                   Filter content results by content type.\n#   --r-version VERSIONSEARCHFILTER\n#                                   Filter content results by R version.\n#   --py-version VERSIONSEARCHFILTER\n#                                   Filter content results by Python version.\n#   --title-contains TEXT           Filter content results by title.\n#   --order-by [created|last_deployed]\n#                                   Order content results.\n#   -v, --verbose                   Print detailed messages.\n#   --help                          Show this message and exit.\n\nrsconnect content search\n# [\n#   {\n#     \"max_conns_per_process\": null,\n#     \"content_category\": \"\",\n#     \"load_factor\": null,\n#     \"cluster_name\": \"Local\",\n#     \"description\": \"\",\n#     \"bundle_id\": \"142\",\n#     \"image_name\": null,\n#     \"r_version\": null,\n#     \"content_url\": \"https://connect.example.org:3939/content/4ffc819c-065c-420c-88eb-332db1133317/\",\n#     \"connection_timeout\": null,\n#     \"min_processes\": null,\n#     \"last_deployed_time\": \"2021-12-02T18:09:11Z\",\n#     \"name\": \"logs-api-python\",\n#     \"title\": \"logs-api-python\",\n#     \"created_time\": \"2021-07-19T19:17:32Z\",\n#     \"read_timeout\": null,\n#     \"guid\": \"4ffc819c-065c-420c-88eb-332db1133317\",\n#     \"parameterized\": false,\n#     \"run_as\": null,\n#     \"py_version\": \"3.8.2\",\n#     \"idle_timeout\": null,\n#     \"app_role\": \"owner\",\n#     \"access_type\": \"acl\",\n#     \"app_mode\": \"python-api\",\n#     \"init_timeout\": null,\n#     \"id\": \"18\",\n#     \"quarto_version\": null,\n#     \"dashboard_url\": \"https://connect.example.org:3939/connect/#/apps/4ffc819c-065c-420c-88eb-332db1133317\",\n#     \"run_as_current_user\": false,\n#     \"owner_guid\": \"edf26318-0027-4d9d-bbbb-54703ebb1855\",\n#     \"max_processes\": null\n#   },\n#   ...\n# ]\n</code></pre> <p>See this section for more comprehensive usage examples of the available search flags.</p>"},{"location":"server-administration/#content-build","title":"Content Build","text":"<p>Note The <code>rsconnect content build</code> subcommand requires Posit Connect &gt;= 2021.11.1</p> <p>Posit Connect caches R and Python packages in the configured <code>Server.DataDir</code>. Under certain circumstances (examples below), these package caches can become stale and need to be rebuilt. This refresh automatically occurs when a Posit Connect user visits the content. You may wish to refresh some content before it is visited because it is high priority or is not visited frequently (API content, emailed reports). In these cases, it is possible to preemptively build specific content items using the <code>rsconnect content build</code> subcommands. This way the user does not have to pay the build cost when the content is accessed next.</p> <p>The following are some common scenarios where performing a content build might be necessary:</p> <ul> <li>OS upgrade</li> <li>changes to gcc or libc libraries</li> <li>changes to Python or R installations</li> <li>switching from source to binary package repositories or vice versa</li> </ul> <p>Note The <code>content build</code> command is non-destructive, meaning that it does nothing to purge existing packrat/python package caches before a build. If you have an existing cache, it should be cleared prior to starting a content build. See the migration documentation for details.</p> <p>Note You may use the <code>rsconnect content search</code> subcommand to help identify high priority content items to build.</p> <pre><code>rsconnect content build --help\nUsage: rsconnect content build [OPTIONS] COMMAND [ARGS]...\n\n  Build content on Posit Connect. Requires Connect &gt;= 2021.11.1\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  add      Mark a content item for build. Use `build run` to invoke the build\n           on the Connect server.\n\n  history  Get the build history for a content item.\n  logs     Print the logs for a content build.\n  ls       List the content items that are being tracked for build on a given\n           Connect server.\n\n  rm       Remove a content item from the list of content that are tracked for\n           build. Use `build ls` to view the tracked content.\n\n  run      Start building content on a given Connect server.\n</code></pre> <p>To build a specific content item, first <code>add</code> it to the list of content that is \"tracked\" for building using its GUID. Content that is \"tracked\" in the local state may become out-of-sync with what exists remotely on the Connect server (the result of <code>rsconnect content search</code>). When this happens, it is safe to remove the locally tracked entries with <code>rsconnect content build rm</code>.</p> <p>Note Metadata for \"tracked\" content items is stored in a local directory called <code>rsconnect-build</code> which will be automatically created in your current working directory. You may set the environment variable <code>CONNECT_CONTENT_BUILD_DIR</code> to override this directory location.</p> <pre><code># `add` the content to mark it as \"tracked\"\nrsconnect content build add --guid 4ffc819c-065c-420c-88eb-332db1133317\n\n# run the build which kicks off a cache rebuild on the server\nrsconnect content build run\n\n# once the build is complete, the content can be \"untracked\"\n# this does not remove the content from the Connect server\n# the entry is only removed from the local state file\nrsconnect content build rm --guid 4ffc819c-065c-420c-88eb-332db1133317\n</code></pre> <p>Note See this section for an example of how to add multiple content items in bulk, from the results of a <code>rsconnect content search</code> command.</p> <p>To view all currently \"tracked\" content items, use the <code>rsconnect content build ls</code> subcommand.</p> <pre><code>rsconnect content build ls\n</code></pre> <p>To view only the \"tracked\" content items that have not yet been built, use the <code>--status NEEDS_BUILD</code> flag.</p> <pre><code>rsconnect content build ls --status NEEDS_BUILD\n</code></pre> <p>Once the content items have been added, you may initiate a build using the <code>rsconnect content build run</code> subcommand. This command will attempt to build all \"tracked\" content that has the status <code>NEEDS_BUILD</code>.</p> <p>To re-run failed builds, use <code>rsconnect content build run --retry</code>. This will build all tracked content in any of the following states: <code>[NEEDS_BUILD, ABORTED, ERROR, RUNNING]</code>.</p> <p>If you encounter an error indicating that a build operation is already in progress, you can use <code>rsconnect content build run --force</code> to bypass the check and proceed with building content marked as <code>NEEDS_BUILD</code>. Ensure no other build operation is actively running before using the <code>--force</code> option.</p> <pre><code>rsconnect content build run\n# [INFO] 2021-12-14T13:02:45-0500 Initializing ContentBuildStore for https://connect.example.org:3939\n# [INFO] 2021-12-14T13:02:45-0500 Starting content build (https://connect.example.org:3939)...\n# [INFO] 2021-12-14T13:02:45-0500 Starting build: 4ffc819c-065c-420c-88eb-332db1133317\n# [INFO] 2021-12-14T13:02:50-0500 Running = 1, Pending = 0, Success = 0, Error = 0\n# [INFO] 2021-12-14T13:02:50-0500 Build succeeded: 4ffc819c-065c-420c-88eb-332db1133317\n# [INFO] 2021-12-14T13:02:55-0500 Running = 0, Pending = 0, Success = 1, Error = 0\n# [INFO] 2021-12-14T13:02:55-0500 1/1 content builds completed in 0:00:10\n# [INFO] 2021-12-14T13:02:55-0500 Success = 1, Error = 0\n# [INFO] 2021-12-14T13:02:55-0500 Content build complete.\n</code></pre> <p>Sometimes content builds will fail and require debugging by the publisher or administrator. Use the <code>rsconnect content build ls</code> to identify content builds that resulted in errors and inspect the build logs with the <code>rsconnect content build logs</code> subcommand.</p> <pre><code>rsconnect content build ls --status ERROR\n# [INFO] 2021-12-14T13:07:32-0500 Initializing ContentBuildStore for https://connect.example.org:3939\n# [\n#   {\n#     \"rsconnect_build_status\": \"ERROR\",\n#     \"last_deployed_time\": \"2021-12-02T18:09:11Z\",\n#     \"owner_guid\": \"edf26318-0027-4d9d-bbbb-54703ebb1855\",\n#     \"rsconnect_last_build_log\": \"/Users/david/code/posit/rsconnect-python/rsconnect-build/logs/connect_example_org_3939/4ffc819c-065c-420c-88eb-332db1133317/pZoqfBoi6BgpKde5.log\",\n#     \"guid\": \"4ffc819c-065c-420c-88eb-332db1133317\",\n#     \"rsconnect_build_task_result\": {\n#       \"user_id\": 1,\n#       \"error\": \"Cannot find compatible environment: no compatible Local environment with Python version 3.9.5\",\n#       \"code\": 1,\n#       \"finished\": true,\n#       \"result\": {\n#         \"data\": \"An error occurred while building the content\",\n#         \"type\": \"build-failed-error\"\n#       },\n#       \"id\": \"pZoqfBoi6BgpKde5\"\n#     },\n#     \"dashboard_url\": \"https://connect.example.org:3939/connect/#/apps/4ffc819c-065c-420c-88eb-332db1133317\",\n#     \"name\": \"logs-api-python\",\n#     \"title\": \"logs-api-python\",\n#     \"content_url\": \"https://connect.example.org:3939/content/4ffc819c-065c-420c-88eb-332db1133317/\",\n#     \"bundle_id\": \"141\",\n#     \"rsconnect_last_build_time\": \"2021-12-14T18:07:16Z\",\n#     \"created_time\": \"2021-07-19T19:17:32Z\",\n#     \"app_mode\": \"python-api\"\n#   }\n# ]\n\nrsconnect content build logs --guid 4ffc819c-065c-420c-88eb-332db1133317\n# [INFO] 2021-12-14T13:09:27-0500 Initializing ContentBuildStore for https://connect.example.org:3939\n# Building Python API...\n# Cannot find compatible environment: no compatible Local environment with Python version 3.9.5\n# Task failed. Task exited with status 1.\n</code></pre> <p>Once a build for a piece of tracked content is complete, it can be safely removed from the list of \"tracked\" content by using <code>rsconnect content build rm</code> command. This command accepts a <code>--guid</code> argument to specify which piece of content to remove. Removing the content from the list of tracked content simply removes the item from the local state file, the content deployed to the server remains unchanged.</p> <pre><code>rsconnect content build rm --guid 4ffc819c-065c-420c-88eb-332db1133317\n</code></pre>"},{"location":"server-administration/#rebuilding-lots-of-content","title":"Rebuilding lots of content","text":"<p>When attempting to rebuild a long list of content, it is recommended to first build a sub-set of the content list. First choose 1 or 2 Python and R content items for each version of Python and R on the server. Try to choose content items that have the most dependencies in common with other content items on the server. Build these content items first with the <code>rsconnect content build run</code> command. This will \"warm\" the Python and R environment cache for subsequent content builds. Once these initial builds are complete, add the remaining content items to the list of \"tracked\" content and execute another <code>rsconnect content build run</code> command.</p> <p>To execute multiple content builds simultaniously, use the <code>rsconnect content build run --parallelism</code> flag to increase the number of concurrent builds. By default, each content item is built serially. Increasing the build parallelism can reduce the total time needed to rebuild a long list of content items. We recommend starting with a low parallelism setting (2-3) and increasing from there to avoid overloading the Connect server with concurrent build operations. Remember that these builds are executing on the Connect server which consumes CPU, RAM, and i/o bandwidth that would otherwise we allocated for Python and R applications running on the server.</p>"},{"location":"server-administration/#usage-examples","title":"Usage Examples","text":""},{"location":"server-administration/#searching-for-content","title":"Searching for content","text":"<p>The following are some examples of how publishers might use the <code>rsconnect content search</code> subcommand to find content on Posit Connect. By default, the <code>rsconnect content search</code> command will return metadata for ALL of the content on a Posit Connect server, both published and unpublished content.</p> <p>Note When using the <code>--r-version</code> and <code>--py-version</code> flags, users should make sure to quote the arguments to avoid conflicting with your shell. For example, bash would interpret <code>--py-version &gt;3.0.0</code> as a shell redirect because of the unquoted <code>&gt;</code> character.</p> <pre><code># return only published content\nrsconnect content search --published\n\n# return only unpublished content\nrsconnect content search --unpublished\n\n# return published content where the python version is at least 3.9.0\nrsconnect content search --published --py-version \"&gt;=3.9.0\"\n\n# return published content where the R version is exactly 3.6.3\nrsconnect content search --published --r-version \"==3.6.3\"\n\n# return published content where the content type is a static RMD\nrsconnect content search --content-type rmd-static\n\n# return published content where the content type is either shiny OR fast-api\nrsconnect content search --content-type shiny --content-type python-fastapi\n\n# return all content, published or unpublished, where the title contains the\n# text \"Stock Report\"\nrsconnect content search --title-contains \"Stock Report\"\n\n# return published content, results are ordered by when the content was last\n# deployed\nrsconnect content search --published --order-by last_deployed\n\n# return published content, results are ordered by when the content was\n# created\nrsconnect content search --published --order-by created\n</code></pre>"},{"location":"server-administration/#finding-r-and-python-versions","title":"Finding R and Python versions","text":"<p>One common use for the <code>search</code> command might be to find the versions of R and python that are currently in use on your Posit Connect server before a migration.</p> <pre><code># search for all published content and print the unique r and python version\n# combinations\nrsconnect content search --published | jq -c '.[] | {py_version,r_version}' | sort |\nuniq\n# {\"py_version\":\"3.8.2\",\"r_version\":\"3.5.3\"}\n# {\"py_version\":\"3.8.2\",\"r_version\":\"3.6.3\"}\n# {\"py_version\":\"3.8.2\",\"r_version\":null}\n# {\"py_version\":null,\"r_version\":\"3.5.3\"}\n# {\"py_version\":null,\"r_version\":\"3.6.3\"}\n# {\"py_version\":null,\"r_version\":null}\n</code></pre>"},{"location":"server-administration/#finding-recently-deployed-content","title":"Finding recently deployed content","text":"<pre><code># return only the 10 most recently deployed content items\nrsconnect content search \\\n    --order-by last_deployed \\\n    --published | jq -c 'limit(10; .[]) | { guid, last_deployed_time }'\n# {\"guid\":\"4ffc819c-065c-420c-88eb-332db1133317\",\"last_deployed_time\":\"2021-12-02T18:09:11Z\"}\n# {\"guid\":\"aa2603f8-1988-484f-a335-193f2c57e6c4\",\"last_deployed_time\":\"2021-12-01T20:56:07Z\"}\n# {\"guid\":\"051252f0-4f70-438f-9be1-d818a3b5f8d9\",\"last_deployed_time\":\"2021-12-01T20:37:01Z\"}\n# {\"guid\":\"015143da-b75f-407c-81b1-99c4a724341e\",\"last_deployed_time\":\"2021-11-30T16:56:21Z\"}\n# {\"guid\":\"bcc74209-3a81-4b9c-acd5-d24a597c256c\",\"last_deployed_time\":\"2021-11-30T15:51:07Z\"}\n# {\"guid\":\"f21d7767-c99e-4dd4-9b00-ff8ec9ae2f53\",\"last_deployed_time\":\"2021-11-23T18:46:28Z\"}\n# {\"guid\":\"da4f709c-c383-4fbc-89e2-f032b2d7e91d\",\"last_deployed_time\":\"2021-11-23T18:46:28Z\"}\n# {\"guid\":\"9180809d-38fd-4730-a0e0-8568c45d87b7\",\"last_deployed_time\":\"2021-11-23T15:16:19Z\"}\n# {\"guid\":\"2b1d2ab8-927d-4956-bbf9-29798d039bc5\",\"last_deployed_time\":\"2021-11-22T18:33:17Z\"}\n# {\"guid\":\"c96db3f3-87a1-4df5-9f58-eb109c397718\",\"last_deployed_time\":\"2021-11-19T20:25:33Z\"}\n</code></pre>"},{"location":"server-administration/#add-to-build-from-search-results","title":"Add to build from search results","text":"<p>One common use case might be to <code>rsconnect content build add</code> content for build based on the results of a <code>rsconnect content search</code>. For example:</p> <pre><code># search for all API type content, then\n# for each guid, add it to the \"tracked\" content items\nfor guid in $(rsconnect content search \\\n        --published \\\n        --content-type python-api \\\n        --content-type api | jq -r '.[].guid'); do\n    rsconnect content build add --guid $guid\ndone\n</code></pre> <p>Adding content items one at a time can be a slow operation. This is because <code>rsconnect content build add</code> must fetch metadata for each content item before it is added to the \"tracked\" content items. By providing multiple <code>--guid</code> arguments to the <code>rsconnect content build add</code> subcommand, we can fetch metadata for multiple content items in a single api call, which speeds up the operation significantly.</p> <pre><code># write the guid of every published content item to a file called guids.txt\nrsconnect content search --published | jq '.[].guid' &gt; guids.txt\n\n# bulk-add from the guids.txt with a single `rsconnect content build add` command\nxargs printf -- '-g %s\\n' &lt; guids.txt | xargs rsconnect content build add\n</code></pre>"},{"location":"commands/add/","title":"add","text":"<p>Associate a simple nickname with the information needed to interact with a deployment target. Specifying an existing nickname will cause its stored information to be replaced by what is given on the command line.</p> <p>Usage:</p> <pre><code>add [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/bootstrap/","title":"bootstrap","text":"<p>Creates an initial admin user to bootstrap a Connect instance. Returns the provisioned API key.</p> <p>Usage:</p> <pre><code>bootstrap [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -s, --server TEXT       The URL for the RStudio Connect server. (Also\n                          settable via CONNECT_SERVER environment variable.)\n                          [required]\n  -i, --insecure          Disable TLS certification/host validation. (Also\n                          settable via CONNECT_INSECURE environment variable.)\n  -c, --cacert FILE       The path to trusted TLS CA certificates. (Also\n                          settable via CONNECT_CA_CERTIFICATE environment\n                          variable.)\n  -j, --jwt-keypath TEXT  The path to the file containing the private key used\n                          to sign the JWT.\n  -r, --raw               Return the API key as raw output rather than a JSON\n                          object\n  -v, --verbose           Enable verbose output. Use -vv for very verbose\n                          (debug) output.\n  --help                  Show this message and exit.\n</code></pre>"},{"location":"commands/content/","title":"content","text":"<p>Interact with Posit Connect's content API.</p> <p>Usage:</p> <pre><code>content [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/content/#content-build","title":"content build","text":"<p>Build content on Posit Connect. Requires Connect &gt;= 2021.11.1</p> <p>Usage:</p> <pre><code>content build [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/content/#content-build-add","title":"content build add","text":"<p>Mark a content item for build. Use <code>build run</code> to invoke the build on the Connect server.</p> <p>Usage:</p> <pre><code>content build add [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -g, --guid GUID[,BUNDLE_ID]     Add a content item by its guid. This flag\n                                  can be passed multiple times.  [required]\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/content/#content-build-history","title":"content build history","text":"<p>Get the build history for a content item.</p> <p>Usage:</p> <pre><code>content build history [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -g, --guid TEXT                 The guid of the content item.  [required]\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/content/#content-build-logs","title":"content build logs","text":"<p>Print the logs for a content build.</p> <p>Usage:</p> <pre><code>content build logs [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -g, --guid TEXT                 The guid of the content item.  [required]\n  -t, --task-id TEXT              The task ID of the build.\n  -f, --format [text|json]        The output format of the logs. Defaults to\n                                  text.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/content/#content-build-ls","title":"content build ls","text":"<p>List the content items that are being tracked for build on a given Connect server.</p> <p>Usage:</p> <pre><code>content build ls [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  --status [NEEDS_BUILD|RUNNING|ABORTED|COMPLETE|ERROR]\n                                  Filter results by status of the build\n                                  operation.\n  -g, --guid TEXT                 Check the local build state of a specific\n                                  content item. This flag can be passed\n                                  multiple times.\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/content/#content-build-rm","title":"content build rm","text":"<p>Remove a content item from the list of content that are tracked for build. Use <code>build ls</code> to view the tracked content.</p> <p>Usage:</p> <pre><code>content build rm [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -g, --guid TEXT                 Remove a content item by guid.\n  --all                           Remove all content items from the list of\n                                  content tracked for build.\n  -p, --purge                     Remove build history and log files from the\n                                  local filesystem.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/content/#content-build-run","title":"content build run","text":"<p>Start building content on a given Connect server.</p> <p>Usage:</p> <pre><code>content build run [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  --parallelism INTEGER RANGE     Defines the number of builds that can run\n                                  concurrently. Defaults to 1.  [x&gt;=1]\n  --retry                         Build all content that is in the\n                                  NEEDS_BUILD, ABORTED, ERROR, or RUNNING\n                                  state.\n  --all                           Build all content, even if it is already\n                                  marked as COMPLETE.\n  --poll-wait INTEGER RANGE       Defines the number of seconds between polls\n                                  when polling for build output. Defaults to\n                                  1.  [x&gt;=1]\n  -f, --format [text|json]        The output format of the logs. Defaults to\n                                  text.\n  --debug                         Log stacktraces from exceptions during\n                                  background operations.\n  --force                         Always build content even if a build is\n                                  already marked as running.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/content/#content-describe","title":"content describe","text":"<p>Describe a content item on Posit Connect.</p> <p>Usage:</p> <pre><code>content describe [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -g, --guid TEXT                 The GUID of a content item to describe. This\n                                  flag can be passed multiple times.\n                                  [required]\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/content/#content-download-bundle","title":"content download-bundle","text":"<p>Download a content item's source bundle.</p> <p>Usage:</p> <pre><code>content download-bundle [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -g, --guid GUID[,BUNDLE_ID]     The GUID of a content item to download.\n                                  [required]\n  -o, --output PATH               Defines the output location for the\n                                  download.  [required]\n  --overwrite                     Overwrite the output file if it already\n                                  exists.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/content/#content-search","title":"content search","text":"<p>Search for content on Posit Connect.</p> <p>Usage:</p> <pre><code>content search [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  --published                     Search only published content.\n  --unpublished                   Search only unpublished content.\n  --content-type [unknown|shiny|rmd-static|rmd-shiny|static|api|tensorflow-saved-model|jupyter-static|python-api|python-dash|python-streamlit|python-bokeh|python-fastapi|quarto-shiny|quarto-static|python-shiny|jupyter-voila|python-gradio]\n                                  Filter content results by content type.\n  --r-version VERSIONSEARCHFILTER\n                                  Filter content results by R version.\n  --py-version VERSIONSEARCHFILTER\n                                  Filter content results by Python version.\n  --title-contains TEXT           Filter content results by title.\n  --order-by [created|last_deployed]\n                                  Order content results.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/","title":"deploy","text":"<p>Deploy content to Posit Connect, Posit Cloud, or shinyapps.io.</p> <p>Usage:</p> <pre><code>deploy [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-api","title":"deploy api","text":"<p>Deploy a Python API module to Posit Connect, Posit Cloud, or shinyapps.io (if supported by the platform). The \"directory\" argument must refer to an existing directory that contains the application code.</p> <p>Usage:</p> <pre><code>deploy api [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Python API\n                                  (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -V, --visibility [public|private]\n                                  The visibility of the resource being\n                                  deployed. (shinyapps.io only; must be public\n                                  (default) or private)\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-bokeh","title":"deploy bokeh","text":"<p>Deploy a Bokeh Application module to Posit Connect, Posit Cloud, or shinyapps.io (if supported by the platform). The \"directory\" argument must refer to an existing directory that contains the application code.</p> <p>Usage:</p> <pre><code>deploy bokeh [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Bokeh\n                                  Application (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -V, --visibility [public|private]\n                                  The visibility of the resource being\n                                  deployed. (shinyapps.io only; must be public\n                                  (default) or private)\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-dash","title":"deploy dash","text":"<p>Deploy a Dash Application module to Posit Connect, Posit Cloud, or shinyapps.io (if supported by the platform). The \"directory\" argument must refer to an existing directory that contains the application code.</p> <p>Usage:</p> <pre><code>deploy dash [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Dash\n                                  Application (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -V, --visibility [public|private]\n                                  The visibility of the resource being\n                                  deployed. (shinyapps.io only; must be public\n                                  (default) or private)\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-fastapi","title":"deploy fastapi","text":"<p>Deploy a Python FastAPI module to Posit Connect, Posit Cloud, or shinyapps.io (if supported by the platform). The \"directory\" argument must refer to an existing directory that contains the application code.</p> <p>Usage:</p> <pre><code>deploy fastapi [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Python\n                                  FastAPI (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -V, --visibility [public|private]\n                                  The visibility of the resource being\n                                  deployed. (shinyapps.io only; must be public\n                                  (default) or private)\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-flask","title":"deploy flask","text":"<p>Deploy a Flask API module to Posit Connect, Posit Cloud, or shinyapps.io (if supported by the platform). The \"directory\" argument must refer to an existing directory that contains the application code.</p> <p>Usage:</p> <pre><code>deploy flask [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Flask API\n                                  (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -V, --visibility [public|private]\n                                  The visibility of the resource being\n                                  deployed. (shinyapps.io only; must be public\n                                  (default) or private)\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-gradio","title":"deploy gradio","text":"<p>Deploy a Gradio Application module to Posit Connect, Posit Cloud, or shinyapps.io (if supported by the platform). The \"directory\" argument must refer to an existing directory that contains the application code.</p> <p>Usage:</p> <pre><code>deploy gradio [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Gradio\n                                  Application (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -V, --visibility [public|private]\n                                  The visibility of the resource being\n                                  deployed. (shinyapps.io only; must be public\n                                  (default) or private)\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-html","title":"deploy html","text":"<p>Deploy an html file, or directory of html files with entrypoint, to Posit Connect or Posit Cloud.</p> <p>Usage:</p> <pre><code>deploy html [OPTIONS] PATH [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  -e, --entrypoint TEXT           The name of the html file that is the\n                                  landing page.\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-manifest","title":"deploy manifest","text":"<p>Deploy content to Posit Connect, Posit Cloud, or shinyapps.io using an existing manifest.json file.  The specified file must either be named \"manifest.json\" or refer to a directory that contains a file named \"manifest.json\".</p> <p>Usage:</p> <pre><code>deploy manifest [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  -V, --visibility [public|private]\n                                  The visibility of the resource being\n                                  deployed. (shinyapps.io only; must be public\n                                  (default) or private)\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-notebook","title":"deploy notebook","text":"<p>Deploy a Jupyter notebook to Posit Connect. This may be done by source or as a static HTML page. If the notebook is deployed as a static HTML page (--static), it cannot be scheduled or rerun on the Connect server.</p> <p>Usage:</p> <pre><code>deploy notebook [OPTIONS] FILE [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -S, --static                    Render the notebook locally and deploy the\n                                  result as a static document. Will not\n                                  include the notebook source. Static\n                                  notebooks cannot be re-run on the server.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  --hide-all-input                Hide all input cells when rendering output\n  --hide-tagged-input             Hide input code cells with the 'hide_input'\n                                  tag\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-other-content","title":"deploy other-content","text":"<p>Show help on how to deploy other content to Posit Connect.</p> <p>Usage:</p> <pre><code>deploy other-content [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-quarto","title":"deploy quarto","text":"<p>Deploy a Quarto document or project to Posit Connect or Posit Cloud. Should the content use the Quarto Jupyter engine, an environment file (\"requirements.txt\") is created and included in the deployment if one does not already exist. Requires Posit Connect 2021.08.0 or later.</p> <p>FILE_OR_DIRECTORY is the path to a single-file Quarto document or the directory containing a Quarto project.</p> <p>Usage:</p> <pre><code>deploy quarto [OPTIONS] FILE_OR_DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -q, --quarto PATH               Path to Quarto installation.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-shiny","title":"deploy shiny","text":"<p>Deploy a Python Shiny Application module to Posit Connect, Posit Cloud, or shinyapps.io (if supported by the platform). The \"directory\" argument must refer to an existing directory that contains the application code.</p> <p>Usage:</p> <pre><code>deploy shiny [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Python\n                                  Shiny Application (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -V, --visibility [public|private]\n                                  The visibility of the resource being\n                                  deployed. (shinyapps.io only; must be public\n                                  (default) or private)\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-streamlit","title":"deploy streamlit","text":"<p>Deploy a Streamlit Application module to Posit Connect, Posit Cloud, or shinyapps.io (if supported by the platform). The \"directory\" argument must refer to an existing directory that contains the application code.</p> <p>Usage:</p> <pre><code>deploy streamlit [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -A, --account TEXT              The shinyapps.io/Posit Cloud account name.\n                                  (Also settable via SHINYAPPS_ACCOUNT\n                                  environment variable.)\n  -T, --token TEXT                The shinyapps.io/Posit Cloud token. (Also\n                                  settable via SHINYAPPS_TOKEN or\n                                  RSCLOUD_TOKEN environment variables.)\n  -S, --secret TEXT               The shinyapps.io/Posit Cloud token secret.\n                                  (Also settable via SHINYAPPS_SECRET or\n                                  RSCLOUD_SECRET environment variables.)\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Streamlit\n                                  Application (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -V, --visibility [public|private]\n                                  The visibility of the resource being\n                                  deployed. (shinyapps.io only; must be public\n                                  (default) or private)\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-tensorflow","title":"deploy tensorflow","text":"<p>Deploy a TensorFlow model to Posit Connect. Requires Posit Connect 2024.05.0 or later.</p> <p>DIRECTORY is the path containing a TensorFlow model.</p> <p>Usage:</p> <pre><code>deploy tensorflow [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/deploy/#deploy-voila","title":"deploy voila","text":"<p>Deploy a Jupyter notebook in Voila mode to Posit Connect.</p> <p>Usage:</p> <pre><code>deploy voila [OPTIONS] PATH [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -N, --new                       Force a new deployment, even if there is\n                                  saved metadata from a previous deployment.\n                                  Cannot be used with --app-id.\n  -a, --app-id TEXT               Existing app ID or GUID to replace. Cannot\n                                  be used with --new.\n  -t, --title TEXT                Title of the content (default is the same as\n                                  the filename).\n  -E, --environment TEXT          Set an environment variable. Specify a value\n                                  with NAME=VALUE, or just NAME to use the\n                                  value from the local environment. May be\n                                  specified multiple times. [v1.8.6+]\n  --no-verify                     Don't access the deployed content to verify\n                                  that it started correctly.\n  --draft                         Deploy the application as a draft. Previous\n                                  bundle will continue to be served until the\n                                  draft is published.\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point.\n  -m, --multi-notebook            Deploy in multi-notebook mode.\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/details/","title":"details","text":"<p>Show details about a Posit Connect server and installed Python information. Use this command to verify that a URL refers to a Posit Connect server, optionally, that an API key is valid for authentication for that server.  It may also be used to verify that the information stored as a nickname is still valid.</p> <p>Usage:</p> <pre><code>details [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/info/","title":"info","text":"<p>Display information about a deployment. For any given file, information about its deployments are saved on a per-server basis.</p> <p>Usage:</p> <pre><code>info [OPTIONS] FILE\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/list/","title":"list","text":"<p>Show the stored information about each known server nickname.</p> <p>Usage:</p> <pre><code>list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -v, --verbose  Enable verbose output. Use -vv for very verbose (debug)\n                 output.\n  --help         Show this message and exit.\n</code></pre>"},{"location":"commands/mcp-server/","title":"mcp-server","text":"<p>Start a Model Context Protocol (MCP) server to expose rsconnect-python capabilities to AI applications through a standardized protocol interface.</p> <p>The MCP server exposes a single tool:</p> <p><code>get_command_info</code>:</p> <ul> <li>Provides detailed parameter schemas for any rsconnect command. This provides context for an LLM to understand how to construct valid rsconnect commands dynamically without hard-coded knowledge of the CLI.</li> </ul> <p>System Requirements:</p> <ul> <li>Python&gt;=3.10</li> <li>fastmcp</li> </ul> <p>The server runs in stdio mode, communicating via standard input/output streams.</p> <p>Usage:</p> <pre><code>mcp-server [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/remove/","title":"remove","text":"<p>Remove the information about a Posit Connect server by nickname or URL. One of --name or --server is required.</p> <p>Usage:</p> <pre><code>remove [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT    The nickname of the Posit Connect server to remove.\n  -s, --server TEXT  The URL of the Posit Connect server to remove.\n  -v, --verbose      Enable verbose output. Use -vv for very verbose (debug)\n                     output.\n  --help             Show this message and exit.\n</code></pre>"},{"location":"commands/system/","title":"system","text":"<p>Interact with Posit Connect's system API.</p> <p>Usage:</p> <pre><code>system [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/system/#system-caches","title":"system caches","text":"<p>Interact with Posit Connect's system caches.</p> <p>Usage:</p> <pre><code>system caches [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/system/#system-caches-delete","title":"system caches delete","text":"<p>Delete a runtime cache on a Posit Connect server.</p> <p>Usage:</p> <pre><code>system caches delete [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  -l, --language TEXT             The language of the target cache.\n                                  [required]\n  -V, --version TEXT              The version of the target cache.  [required]\n  -I, --image-name TEXT           The image name of the target cache's\n                                  execution environment. Defaults to \"Local\".\n  -d, --dry-run                   If true, verify that deletion would occur,\n                                  but do not delete.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/system/#system-caches-list","title":"system caches list","text":"<p>List runtime caches present on a Posit Connect server.</p> <p>Usage:</p> <pre><code>system caches list [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  -n, --name TEXT                 The nickname of the Posit Connect server to\n                                  deploy to.\n  -s, --server TEXT               The URL for the Posit Connect server to\n                                  deploy to. (Also settable via CONNECT_SERVER\n                                  environment variable.)\n  -k, --api-key TEXT              The API key to use to authenticate with\n                                  Posit Connect. (Also settable via\n                                  CONNECT_API_KEY environment variable.)\n  -i, --insecure                  Disable TLS certification/host validation.\n                                  (Also settable via CONNECT_INSECURE\n                                  environment variable.)\n  -c, --cacert FILE               The path to trusted TLS CA certificates.\n                                  (Also settable via CONNECT_CA_CERTIFICATE\n                                  environment variable.)\n  -v, --verbose                   Enable verbose output. Use -vv for very\n                                  verbose (debug) output.\n  --snowflake-connection-name TEXT\n                                  The name of the Snowflake connection in the\n                                  configuration file\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/version/","title":"version","text":"<p>Show the version of the rsconnect-python package.</p> <p>Usage:</p> <pre><code>version [OPTIONS]\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/","title":"write-manifest","text":"<p>Create a manifest.json file for later deployment. This may be used with the git support provided by Posit Connect or by using the \"deploy manifest\" command in this tool.</p> <p>Usage:</p> <pre><code>write-manifest [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> <pre><code>  --help  Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-api","title":"write-manifest api","text":"<p>Create a manifest.json file for a Python API for later deployment. This will create an environment file (\"requirements.txt\") if one does not exist. All files are created in the same directory as the API code.</p> <p>Usage:</p> <pre><code>write-manifest api [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Python API\n                                  (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect-python package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -v, --verbose                   Print detailed messages\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-bokeh","title":"write-manifest bokeh","text":"<p>Create a manifest.json file for a Bokeh Application for later deployment. This will create an environment file (\"requirements.txt\") if one does not exist. All files are created in the same directory as the API code.</p> <p>Usage:</p> <pre><code>write-manifest bokeh [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Bokeh\n                                  Application (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect-python package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -v, --verbose                   Print detailed messages\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-dash","title":"write-manifest dash","text":"<p>Create a manifest.json file for a Dash Application for later deployment. This will create an environment file (\"requirements.txt\") if one does not exist. All files are created in the same directory as the API code.</p> <p>Usage:</p> <pre><code>write-manifest dash [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Dash\n                                  Application (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect-python package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -v, --verbose                   Print detailed messages\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-fastapi","title":"write-manifest fastapi","text":"<p>Create a manifest.json file for a Python FastAPI for later deployment. This will create an environment file (\"requirements.txt\") if one does not exist. All files are created in the same directory as the API code.</p> <p>Usage:</p> <pre><code>write-manifest fastapi [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Python\n                                  FastAPI (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect-python package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -v, --verbose                   Print detailed messages\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-flask","title":"write-manifest flask","text":"<p>Create a manifest.json file for a Flask API for later deployment. This will create an environment file (\"requirements.txt\") if one does not exist. All files are created in the same directory as the API code.</p> <p>Usage:</p> <pre><code>write-manifest flask [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Flask API\n                                  (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect-python package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -v, --verbose                   Print detailed messages\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-gradio","title":"write-manifest gradio","text":"<p>Create a manifest.json file for a Gradio Application for later deployment. This will create an environment file (\"requirements.txt\") if one does not exist. All files are created in the same directory as the API code.</p> <p>Usage:</p> <pre><code>write-manifest gradio [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Gradio\n                                  Application (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect-python package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -v, --verbose                   Print detailed messages\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-notebook","title":"write-manifest notebook","text":"<p>Create a manifest.json file for a Jupyter notebook for later deployment. This will create an environment file (\"requirements.txt\") if one does not exist. All files are created in the same directory as the notebook file.</p> <p>Usage:</p> <pre><code>write-manifest notebook [OPTIONS] FILE [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  --hide-all-input                Hide all input cells when rendering output\n  --hide-tagged-input             Hide input code cells with the 'hide_input'\n                                  tag\n  -v, --verbose                   Print detailed messages\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-quarto","title":"write-manifest quarto","text":"<p>Create a manifest.json file for a Quarto document or project for later deployment. Should the content use the Quarto Jupyter engine, an environment file (\"requirements.txt\") is created if one does not already exist. All files are created in the same directory as the project. Requires Posit Connect 2021.08.0 or later.</p> <p>FILE_OR_DIRECTORY is the path to a single-file Quarto document or the directory containing a Quarto project.</p> <p>Usage:</p> <pre><code>write-manifest quarto [OPTIONS] FILE_OR_DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -q, --quarto PATH               Path to Quarto installation.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -v, --verbose                   Print detailed messages\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-shiny","title":"write-manifest shiny","text":"<p>Create a manifest.json file for a Python Shiny Application for later deployment. This will create an environment file (\"requirements.txt\") if one does not exist. All files are created in the same directory as the API code.</p> <p>Usage:</p> <pre><code>write-manifest shiny [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Python\n                                  Shiny Application (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect-python package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -v, --verbose                   Print detailed messages\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-streamlit","title":"write-manifest streamlit","text":"<p>Create a manifest.json file for a Streamlit Application for later deployment. This will create an environment file (\"requirements.txt\") if one does not exist. All files are created in the same directory as the API code.</p> <p>Usage:</p> <pre><code>write-manifest streamlit [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point for the Streamlit\n                                  Application (defaults to app)\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect-python package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -v, --verbose                   Print detailed messages\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-tensorflow","title":"write-manifest tensorflow","text":"<p>Create a manifest.json file for a TensorFlow model for later deployment. All files are created in the same directory as the content. Requires Posit Connect 2024.05.0 or later.</p> <p>DIRECTORY is the path to a directory containing a TensorFlow model.</p> <p>Usage:</p> <pre><code>write-manifest tensorflow [OPTIONS] DIRECTORY [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite     Overwrite manifest.json, if it exists.\n  -x, --exclude TEXT  Specify a glob pattern for ignoring files when building\n                      the bundle. Note that your shell may try to expand this\n                      which will not do what you expect. Generally, it's\n                      safest to quote the pattern. This option may be\n                      repeated.\n  -v, --verbose       Print detailed messages\n  -I, --image TEXT    Target image to be used during content build and\n                      execution. This option is only applicable if the Connect\n                      server is configured to use off-host execution.\n  --help              Show this message and exit.\n</code></pre>"},{"location":"commands/write-manifest/#write-manifest-voila","title":"write-manifest voila","text":"<p>Create a manifest.json file for a Voila notebook for later deployment. This will create an environment file (\"requirements.txt\") if one does not exist. All files are created in the same directory as the notebook file.</p> <p>Usage:</p> <pre><code>write-manifest voila [OPTIONS] PATH [EXTRA_FILES]...\n</code></pre> <p>Options:</p> <pre><code>  -o, --overwrite                 Overwrite manifest.json, if it exists.\n  -p, --python PATH               Path to Python interpreter whose environment\n                                  should be used. The Python environment must\n                                  have the rsconnect package installed.\n  --override-python-version PYTHON-VERSION\n                                  An optional python version to use instead of\n                                  the version from the detected environment.\n  -g, --force-generate            Force generating \"requirements.txt\", even if\n                                  it already exists.\n  -v, --verbose                   Print detailed messages\n  -e, --entrypoint TEXT           The module and executable object which\n                                  serves as the entry point.\n  -x, --exclude TEXT              Specify a glob pattern for ignoring files\n                                  when building the bundle. Note that your\n                                  shell may try to expand this which will not\n                                  do what you expect. Generally, it's safest\n                                  to quote the pattern. This option may be\n                                  repeated.\n  -m, --multi-notebook            Set the manifest for multi-notebook mode.\n  -I, --image TEXT                Target image to be used during content build\n                                  and execution. This option is only\n                                  applicable if the Connect server is\n                                  configured to use off-host execution.\n  --disable-env-management        Shorthand to disable environment management\n                                  for both Python and R.\n  --disable-env-management-py     Disable Python environment management for\n                                  this bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct Python environment\n                                  on the Connect server.\n  --disable-env-management-r      Disable R environment management for this\n                                  bundle. Connect will not create an\n                                  environment or install packages. An\n                                  administrator must install the required\n                                  packages in the correct R environment on the\n                                  Connect server.\n  --help                          Show this message and exit.\n</code></pre>"}]}