name: rsconnect-python-tests-at-night
on:
  schedule:
    - cron: "0 09 * * *" # Runs 11 AM UTC == 2 AM PDT
  workflow_dispatch:

jobs:
    distributions:
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            
        - uses: actions/setup-python@v4
          with:
            python-version: 3.8.x
        - run: pip install -e '.[test]'
        - run: pip freeze
        - run: make dist
          id: create_dist
        - uses: actions/upload-artifact@v3
          with:
            name: distributions
            path: dist/

    test-connect:
        needs: distributions
        runs-on: ubuntu-latest
        strategy:
          fail-fast: false
          matrix:
            PY_VERSION:
              - 3.11.7
              - 3.12.1
        steps:
        - uses: extractions/setup-just@v2
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - uses: actions/checkout@v4
          with:
            fetch-depth: 0
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
        - name: Delete dotnet to save space
          run: sudo rm -rf /usr/share/dotnet

        - uses: actions/checkout@v4
          with:
            repository: rstudio/connect
            path: 'test/connect-rsconnect-python'
            sparse-checkout: |
                test/rsconnect-python
                scripts
                examples
            sparse-checkout-cone-mode: false
            token: ${{ secrets.CONNECT_PAT }}
    
        - name: Build docker container-image
          run: |
            cd test/connect-rsconnect-python/test/rsconnect-python/
            docker compose --profile rsconnect build
    
        - name: Restore dist
          uses: actions/download-artifact@v3
          with:
            name: distributions
            path: dist/
       
        - name: Run rsconnect-python Tests
          env:
            CONNECT_LICENSE: "${{ secrets.RSC_LICENSE }}"
            PY_VERSION: ${{ matrix.PY_VERSION }}
            CONNECT_CONFIG: "test-rsconnect-python.gcfg"
            TEST_SUBSET: "ALL"
            RSC_AUTOMATION_PAT: "${{ secrets.CONNECT_PAT }}"
            ADMIN_API_KEY: "${{ secrets.ADMIN_API_KEY }}"
            QUARTO_VERSION: "1.4.546"
            # This allows us to start Connect separately in our own docker container
            CONNECT_SERVER: "http://localhost:3939"
            IMAGE_OS: "rstudio/connect:ubuntu22"
            remote: "yes"
          run: |
            cd integration-testing
            docker compose build connect-cli
            docker compose build client-cli
            docker compose up -d connect-cli
            docker compose up -d client-cli
            docker compose run --rm client-cli just ../test/connect-rsconnect-python/test/rsconnect-python/_start-dev
        
        # Videos are captured whether the suite fails or passes
        - name: Save videos
          uses: actions/upload-artifact@v3
          if: failure()
          with:
            name: cypress-videos_${{ matrix.PY_VERSION }}_native
            path: test/connect-rsconnect-python/cypress/videos
            if-no-files-found: ignore

        # Screenshots are only captured on failure
        - name: Save screenshots
          uses: actions/upload-artifact@v3
          if: failure()
          with:
            name: cypress-screenshots_${{ matrix.PY_VERSION }}_native
            path: test/connect-rsconnect-python/cypress/screenshots
            if-no-files-found: ignore

